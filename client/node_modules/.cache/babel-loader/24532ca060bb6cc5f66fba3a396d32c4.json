{"ast":null,"code":"import axios from \"axios\";\nimport setChallengeToken from \"../utils/setChallengeToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CHALLENGE, SET_ROOM } from \"./types\";\n\nvar jwt = require(\"jsonwebtoken\");\n\nexport var challengeUser = function challengeUser(ID) {\n  return function (dispatch) {\n    console.log('setChall call');\n    console.log(ID);\n    axios.post(\"/api/users/getChallenge\", ID).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem(\"challengeToken\", token); // Set token to Auth header\n\n      setChallengeToken(token); // Decode token to get user data\n\n      var decoded = jwt_decode(token); // Set current user\n\n      dispatch(setCurrentChallenge(decoded));\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var setCurrentChallenge = function setCurrentChallenge(challenge) {\n  return {\n    type: SET_CHALLENGE,\n    payload: challenge\n  };\n};\nexport var removeChallenge = function removeChallenge() {\n  return function (dispatch) {\n    localStorage.removeItem(\"challengeToken\");\n    setChallengeToken(false);\n    dispatch(setCurrentChallenge({}));\n  };\n};\nexport var setCurrentRoom = function setCurrentRoom(room) {\n  return function (dispatch) {\n    axios.post(\"api/users/getRoom\", room).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem(\"roomToken\", token);\n      var decoded = jwt_decode(token);\n      dispatch(dispatchRoomToken(decoded));\n    }).catch(function (err) {\n      return console.log(err.response.data);\n    });\n  };\n};\nexport var dispatchRoomToken = function dispatchRoomToken(room) {\n  return {\n    type: SET_ROOM,\n    payload: room\n  };\n};\nexport var removeRoom = function removeRoom() {\n  return function (dispatch) {\n    localStorage.removeItem(\"roomToken\");\n    dispatch(dispatchRoomToken({}));\n  };\n};","map":{"version":3,"sources":["C:/Users/jacob/Comp-Coder/client/src/actions/challengeActions.js"],"names":["axios","setChallengeToken","jwt_decode","SET_CHALLENGE","SET_ROOM","jwt","require","challengeUser","ID","dispatch","console","log","post","then","res","token","data","localStorage","setItem","decoded","setCurrentChallenge","catch","err","challenge","type","payload","removeChallenge","removeItem","setCurrentRoom","room","dispatchRoomToken","response","removeRoom"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SACEC,aADF,EAEEC,QAFF,QAGO,SAHP;;AAKA,IAAMC,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD;AAAA,SAAQ,UAAAC,QAAQ,EAAI;AAC/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACAR,IAAAA,KAAK,CACFY,IADH,CACQ,yBADR,EACmCJ,EADnC,EAEGK,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,UAAQC,KAAR,GAAkBD,GAAG,CAACE,IAAtB,CAAQD,KAAR;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,gBAArB,EAAuCH,KAAvC,EAFW,CAGX;;AACAd,MAAAA,iBAAiB,CAACc,KAAD,CAAjB,CAJW,CAKX;;AACA,UAAMI,OAAO,GAAGjB,UAAU,CAACa,KAAD,CAA1B,CANW,CAOX;;AACAN,MAAAA,QAAQ,CAACW,mBAAmB,CAACD,OAAD,CAApB,CAAR;AACD,KAXH,EAYGE,KAZH,CAYS,UAAAC,GAAG;AAAA,aACRZ,OAAO,CAACC,GAAR,CAAYW,GAAZ,CADQ;AAAA,KAZZ;AAeD,GAlB4B;AAAA,CAAtB;AAoBP,OAAO,IAAMF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAG,SAAS,EAAI;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAErB,aADD;AAELsB,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOL,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAAAjB,QAAQ,EAAI;AAC/CQ,IAAAA,YAAY,CAACU,UAAb,CAAwB,gBAAxB;AACA1B,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAQ,IAAAA,QAAQ,CAACW,mBAAmB,CAAC,EAAD,CAApB,CAAR;AACD,GAJ8B;AAAA,CAAxB;AAMR,OAAO,IAAMQ,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD;AAAA,SAAU,UAAApB,QAAQ,EAAI;AAEjDT,IAAAA,KAAK,CACFY,IADH,CACQ,mBADR,EAC6BiB,IAD7B,EAEGhB,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACX,UAAQC,KAAR,GAAkBD,GAAG,CAACE,IAAtB,CAAQD,KAAR;AACAE,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCH,KAAlC;AACA,UAAMI,OAAO,GAAGjB,UAAU,CAACa,KAAD,CAA1B;AAEAN,MAAAA,QAAQ,CAACqB,iBAAiB,CAACX,OAAD,CAAlB,CAAR;AAED,KATH,EAUGE,KAVH,CAUS,UAAAC,GAAG;AAAA,aACRZ,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACS,QAAJ,CAAaf,IAAzB,CADQ;AAAA,KAVZ;AAYD,GAd4B;AAAA,CAAvB;AAgBN,OAAO,IAAMc,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAD,IAAI,EAAG;AACtC,SAAO;AACLL,IAAAA,IAAI,EAAEpB,QADD;AAELqB,IAAAA,OAAO,EAAEI;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAAAvB,QAAQ,EAAI;AAC1CQ,IAAAA,YAAY,CAACU,UAAb,CAAwB,WAAxB;AACAlB,IAAAA,QAAQ,CAACqB,iBAAiB,CAAC,EAAD,CAAlB,CAAR;AACD,GAHyB;AAAA,CAAnB","sourcesContent":["import axios from \"axios\";\r\nimport setChallengeToken from \"../utils/setChallengeToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n  SET_CHALLENGE,\r\n  SET_ROOM\r\n} from \"./types\";\r\n\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nexport const challengeUser = (ID) => dispatch => {\r\n  console.log('setChall call');\r\n  console.log(ID);\r\n  axios\r\n    .post(\"/api/users/getChallenge\", ID)\r\n    .then(res => {\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"challengeToken\", token);\r\n      // Set token to Auth header\r\n      setChallengeToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentChallenge(decoded));\r\n    })\r\n    .catch(err =>\r\n      console.log(err));\r\n\r\n};\r\n\r\nexport const setCurrentChallenge = challenge => {\r\n  return {\r\n    type: SET_CHALLENGE,\r\n    payload: challenge\r\n  };\r\n}\r\n\r\n  export const removeChallenge = () => dispatch => {\r\n    localStorage.removeItem(\"challengeToken\");\r\n    setChallengeToken(false);\r\n    dispatch(setCurrentChallenge({}));\r\n  };\r\n\r\n export const setCurrentRoom = (room) => dispatch => {\r\n\r\n    axios\r\n      .post(\"api/users/getRoom\", room)\r\n      .then(res => {\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"roomToken\", token);\r\n        const decoded = jwt_decode(token);\r\n\r\n        dispatch(dispatchRoomToken(decoded));\r\n\r\n      })\r\n      .catch(err => \r\n        console.log(err.response.data));\r\n  }\r\n\r\n  export const dispatchRoomToken = room =>{\r\n    return {\r\n      type: SET_ROOM,\r\n      payload: room\r\n    }\r\n  }\r\n\r\n  export const removeRoom = () => dispatch => {\r\n    localStorage.removeItem(\"roomToken\");\r\n    dispatch(dispatchRoomToken({}));\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}