{"ast":null,"code":"import axios from\"axios\";import setChallengeToken from\"../utils/setChallengeToken\";import jwt_decode from\"jwt-decode\";import{SET_CHALLENGE,SET_ROOM}from\"./types\";var jwt=require(\"jsonwebtoken\");export var challengeUser=function challengeUser(ID){return function(dispatch){console.log('setChall call');console.log(ID);axios.post(\"/api/users/getChallenge\",ID).then(function(res){var token=res.data.token;localStorage.setItem(\"challengeToken\",token);// Set token to Auth header\nsetChallengeToken(token);// Decode token to get user data\nvar decoded=jwt_decode(token);// Set current user\ndispatch(setCurrentChallenge(decoded));}).catch(function(err){return console.log(err);});};};export var setCurrentChallenge=function setCurrentChallenge(challenge){return{type:SET_CHALLENGE,payload:challenge};};export var removeChallenge=function removeChallenge(){return function(dispatch){localStorage.removeItem(\"challengeToken\");setChallengeToken(false);dispatch(setCurrentChallenge({}));};};export var setCurrentRoom=function setCurrentRoom(room){return function(dispatch){axios.post(\"api/users/getRoom\",room).then(function(res){var token=res.data.token;localStorage.setItem(\"roomToken\",token);var decoded=jwt_decode(token);dispatch(dispatchRoomToken(decoded));}).catch(function(err){return console.log(err.response.data);});};};export var dispatchRoomToken=function dispatchRoomToken(room){return{type:SET_ROOM,payload:room};};export var removeRoom=function removeRoom(){return function(dispatch){localStorage.removeItem(\"roomToken\");dispatch(dispatchRoomToken({}));};};","map":{"version":3,"sources":["C:/Users/jacob/Comp-Coder/client/src/actions/challengeActions.js"],"names":["axios","setChallengeToken","jwt_decode","SET_CHALLENGE","SET_ROOM","jwt","require","challengeUser","ID","dispatch","console","log","post","then","res","token","data","localStorage","setItem","decoded","setCurrentChallenge","catch","err","challenge","type","payload","removeChallenge","removeItem","setCurrentRoom","room","dispatchRoomToken","response","removeRoom"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,4BAA9B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CAEA,OACEC,aADF,CAEEC,QAFF,KAGO,SAHP,CAKA,GAAMC,CAAAA,GAAG,CAAGC,OAAO,CAAC,cAAD,CAAnB,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,EAAD,QAAQ,UAAAC,QAAQ,CAAI,CAC/CC,OAAO,CAACC,GAAR,CAAY,eAAZ,EACAD,OAAO,CAACC,GAAR,CAAYH,EAAZ,EACAR,KAAK,CACFY,IADH,CACQ,yBADR,CACmCJ,EADnC,EAEGK,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,GAAQC,CAAAA,KAAR,CAAkBD,GAAG,CAACE,IAAtB,CAAQD,KAAR,CACAE,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAuCH,KAAvC,EACA;AACAd,iBAAiB,CAACc,KAAD,CAAjB,CACA;AACA,GAAMI,CAAAA,OAAO,CAAGjB,UAAU,CAACa,KAAD,CAA1B,CACA;AACAN,QAAQ,CAACW,mBAAmB,CAACD,OAAD,CAApB,CAAR,CACD,CAXH,EAYGE,KAZH,CAYS,SAAAC,GAAG,QACRZ,CAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ,CADQ,EAZZ,EAeD,CAlB4B,EAAtB,CAoBP,MAAO,IAAMF,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAAG,SAAS,CAAI,CAC9C,MAAO,CACLC,IAAI,CAAErB,aADD,CAELsB,OAAO,CAAEF,SAFJ,CAAP,CAID,CALM,CAOL,MAAO,IAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,SAAM,UAAAjB,QAAQ,CAAI,CAC/CQ,YAAY,CAACU,UAAb,CAAwB,gBAAxB,EACA1B,iBAAiB,CAAC,KAAD,CAAjB,CACAQ,QAAQ,CAACW,mBAAmB,CAAC,EAAD,CAApB,CAAR,CACD,CAJ8B,EAAxB,CAMR,MAAO,IAAMQ,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,QAAU,UAAApB,QAAQ,CAAI,CAEjDT,KAAK,CACFY,IADH,CACQ,mBADR,CAC6BiB,IAD7B,EAEGhB,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX,GAAQC,CAAAA,KAAR,CAAkBD,GAAG,CAACE,IAAtB,CAAQD,KAAR,CACAE,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAkCH,KAAlC,EACA,GAAMI,CAAAA,OAAO,CAAGjB,UAAU,CAACa,KAAD,CAA1B,CAEAN,QAAQ,CAACqB,iBAAiB,CAACX,OAAD,CAAlB,CAAR,CAED,CATH,EAUGE,KAVH,CAUS,SAAAC,GAAG,QACRZ,CAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACS,QAAJ,CAAaf,IAAzB,CADQ,EAVZ,EAYD,CAd4B,EAAvB,CAgBN,MAAO,IAAMc,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAD,IAAI,CAAG,CACtC,MAAO,CACLL,IAAI,CAAEpB,QADD,CAELqB,OAAO,CAAEI,IAFJ,CAAP,CAID,CALM,CAOP,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAM,UAAAvB,QAAQ,CAAI,CAC1CQ,YAAY,CAACU,UAAb,CAAwB,WAAxB,EACAlB,QAAQ,CAACqB,iBAAiB,CAAC,EAAD,CAAlB,CAAR,CACD,CAHyB,EAAnB","sourcesContent":["import axios from \"axios\";\r\nimport setChallengeToken from \"../utils/setChallengeToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nimport {\r\n  SET_CHALLENGE,\r\n  SET_ROOM\r\n} from \"./types\";\r\n\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nexport const challengeUser = (ID) => dispatch => {\r\n  console.log('setChall call');\r\n  console.log(ID);\r\n  axios\r\n    .post(\"/api/users/getChallenge\", ID)\r\n    .then(res => {\r\n      const { token } = res.data;\r\n      localStorage.setItem(\"challengeToken\", token);\r\n      // Set token to Auth header\r\n      setChallengeToken(token);\r\n      // Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      // Set current user\r\n      dispatch(setCurrentChallenge(decoded));\r\n    })\r\n    .catch(err =>\r\n      console.log(err));\r\n\r\n};\r\n\r\nexport const setCurrentChallenge = challenge => {\r\n  return {\r\n    type: SET_CHALLENGE,\r\n    payload: challenge\r\n  };\r\n}\r\n\r\n  export const removeChallenge = () => dispatch => {\r\n    localStorage.removeItem(\"challengeToken\");\r\n    setChallengeToken(false);\r\n    dispatch(setCurrentChallenge({}));\r\n  };\r\n\r\n export const setCurrentRoom = (room) => dispatch => {\r\n\r\n    axios\r\n      .post(\"api/users/getRoom\", room)\r\n      .then(res => {\r\n        const { token } = res.data;\r\n        localStorage.setItem(\"roomToken\", token);\r\n        const decoded = jwt_decode(token);\r\n\r\n        dispatch(dispatchRoomToken(decoded));\r\n\r\n      })\r\n      .catch(err => \r\n        console.log(err.response.data));\r\n  }\r\n\r\n  export const dispatchRoomToken = room =>{\r\n    return {\r\n      type: SET_ROOM,\r\n      payload: room\r\n    }\r\n  }\r\n\r\n  export const removeRoom = () => dispatch => {\r\n    localStorage.removeItem(\"roomToken\");\r\n    dispatch(dispatchRoomToken({}));\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}