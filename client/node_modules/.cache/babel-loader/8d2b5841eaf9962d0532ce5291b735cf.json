{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/jacob/Comp-Coder/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\jacob\\\\Comp-Coder\\\\client\\\\src\\\\components\\\\dashboard\\\\ChallengePage.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { removeChallenge, removeRoom, challengeUser } from \"../../actions/challengeActions\";\nimport { updateUserRank, coolDown } from \"../../actions/authActions\";\nimport \"unirest\";\nimport \"./ChallengePage.css\";\nimport Timer from \"./Timer\";\nimport socket from \"../../socket\";\nimport { Col, Alert, Button } from \"react-bootstrap\";\nimport Editor from \"@monaco-editor/react\";\nimport PanelGroup from 'react-panelgroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ChallengePage = /*#__PURE__*/function (_Component) {\n  _inherits(ChallengePage, _Component);\n\n  var _super = _createSuper(ChallengePage);\n\n  function ChallengePage(props) {\n    var _this;\n\n    _classCallCheck(this, ChallengePage);\n\n    _this = _super.call(this, props);\n\n    _this.back = function (event) {\n      event.preventDefault();\n\n      if (!_this.state.isGameFinished) {\n        _this.showConfirmLeave();\n      } else {\n        _this.setState({\n          leaving: true\n        });\n\n        socket.emit('endGame', {\n          room: _this.props.room.room\n        });\n\n        _this.props.history.push('/dashboard');\n      }\n    };\n\n    _this.confirmedAbandon = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        leaving: true\n      });\n\n      socket.emit('endGame', {\n        room: _this.props.room.room\n      });\n\n      _this.props.coolDown({\n        name: _this.props.user.name,\n        time: new Date().getTime() + 1800000\n      });\n\n      _this.props.history.push('/dashboard');\n    };\n\n    _this.opponentLeave = function () {\n      _this.setState({\n        leaving: true\n      }); //socket.emit('opponentLeft', {room:this.props.room.room});\n\n\n      _this.props.history.push('/dashboard');\n    };\n\n    _this.backMyFault = function () {\n      _this.setState({\n        leaving: true\n      });\n\n      socket.emit('endGame', {\n        room: _this.props.room.room\n      });\n\n      _this.props.history.push('/dashboard');\n    };\n\n    _this.input = function (value, event) {\n      // event.preventDefault();\n      if (!_this.state.firstInput) {\n        if (parseInt(_this.props.room.room.split('/')[1]) !== _this.props.challenge.challenge.i) {\n          //this.back();\n          _this.backMyFault();\n        }\n      }\n\n      socket.emit('checkRoom'); // console.log(this.props.room);\n      // console.log(this.props.challenge);\n      // console.log(socket);\n      // if(this.state.count===0)\n      //      this.enableTab('source');\n\n      localStorage.setItem('srcCode', value); //store input in local storage so it is preserved on refresh    \n\n      _this.setState({\n        input: value,\n        count: 1,\n        firstInput: true\n      });\n    };\n\n    _this.userInput = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        user_input: event.target.value\n      });\n    };\n\n    _this.submit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var currentTime, outputText, challenge, j, str2, str3, timeElapsed, str1, w, str5, userOutputs, userOutputsCorrect, correct, userOutputsSplit, numCorrect, runTime, memory, numOfLoops, k, response, jsonResponse, jsonGetSolution, url, getSolution, t;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                currentTime = new Date().getTime();\n\n                if (!((currentTime - _this.state.timeOfLastRun) / 1000 >= 30)) {\n                  _context.next = 62;\n                  break;\n                }\n\n                _this.setState({\n                  timeOfLastRun: new Date().getTime()\n                });\n\n                outputText = document.getElementById('output').textContent;\n                outputText = document.getElementById(\"output\");\n                challenge = _this.props.challenge.challenge;\n                j = 0;\n                str2 = '';\n                str3 = _this.state.input;\n                timeElapsed = new Date().getTime() - _this.state.startTime; //Building the main method that will be used to invoke the user made method, and adding an import of Scanner at the beginning\n\n                str1 = '\\tpublic static void main(String[] args){\\n';\n                w = 0;\n                str5 = '';\n                userOutputs = '';\n                userOutputsCorrect = {};\n                correct = true;\n                userOutputsSplit = {};\n                numCorrect = 0;\n                runTime = 0;\n                memory = 0;\n                numOfLoops = 0;\n\n                for (j = 0; j < challenge.inputs.length; j++) {\n                  str1 = str1 + \"\\t\\ttry{\\n\\t\\t\\tSystem.out.println(\" + challenge.methodName + \"(\";\n\n                  for (k = 0; k < challenge.inputs[j].length; k++) {\n                    str1 = str1 + challenge.inputs[j][k];\n                    if (k < challenge.inputs[j].length - 1) str1 = str1 + ', ';\n                  }\n\n                  str1 = str1 + \"));}\\n\\t\\tcatch(Exception e){\\n\\t\\t\\tSystem.out.println(e.toString());\\n\\t\\t}\\n\";\n                }\n\n                str1 = str1 + \"\\t}\\n\";\n\n              case 24:\n                if (!(str3.length > 0)) {\n                  _context.next = 37;\n                  break;\n                }\n\n                w = str3.indexOf('\\n');\n\n                if (!(str3.indexOf(\"public class Main\") !== 0)) {\n                  _context.next = 31;\n                  break;\n                }\n\n                //Toss a main method in there that calls the input method and passes into it the subject input\n                str2 = str2 + str3.substring(0, w + 1);\n                str3 = str3.substring(w + 1, str3.length);\n                _context.next = 35;\n                break;\n\n              case 31:\n                str2 = str2 + \"\\n\" + challenge.dataStructure + \"\\n\" + str3.substring(0, w + 1);\n                str3 = str3.substring(w + 1, str3.length);\n                str2 = str2.concat(str1, str3);\n                return _context.abrupt(\"break\", 37);\n\n              case 35:\n                _context.next = 24;\n                break;\n\n              case 37:\n                _context.next = 39;\n                return fetch(\"https://judge0-extra.p.rapidapi.com/submissions\", {\n                  method: \"POST\",\n                  headers: {\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\",\n                    \"content-type\": \"application/json\",\n                    accept: \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    source_code: str2,\n                    language_id: 62\n                  })\n                });\n\n              case 39:\n                response = _context.sent;\n                _context.next = 42;\n                return response.json();\n\n              case 42:\n                jsonResponse = _context.sent;\n                jsonGetSolution = {\n                  status: {\n                    description: \"Queue\"\n                  },\n                  stderr: null,\n                  compile_output: null\n                };\n\n              case 44:\n                if (!(jsonGetSolution.status.description !== \"Accepted\" && jsonGetSolution.stderr == null && jsonGetSolution.compile_output == null)) {\n                  _context.next = 58;\n                  break;\n                }\n\n                numOfLoops++;\n\n                if (!(numOfLoops > 100)) {\n                  _context.next = 48;\n                  break;\n                }\n\n                return _context.abrupt(\"break\", 58);\n\n              case 48:\n                if (!jsonResponse.token) {\n                  _context.next = 56;\n                  break;\n                }\n\n                url = \"https://judge0-extra.p.rapidapi.com/submissions/\".concat(jsonResponse.token, \"?base64_encoded=true\");\n                _context.next = 52;\n                return fetch(url, {\n                  method: \"GET\",\n                  headers: {\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                    \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\",\n                    \"content-type\": \"application/json\"\n                  }\n                });\n\n              case 52:\n                getSolution = _context.sent;\n                _context.next = 55;\n                return getSolution.json();\n\n              case 55:\n                jsonGetSolution = _context.sent;\n\n              case 56:\n                _context.next = 44;\n                break;\n\n              case 58:\n                if (jsonGetSolution.stdout) {\n                  userOutputs = atob(jsonGetSolution.stdout);\n                  runTime = jsonGetSolution.time;\n                  memory = jsonGetSolution.memory;\n                  userOutputsSplit = userOutputs.split(\"\\n\");\n\n                  for (t = 0; t < userOutputsSplit.length; t++) {\n                    if (userOutputsSplit[t] === challenge.outputs[t]) {\n                      userOutputsCorrect[t] = true;\n                      numCorrect++;\n                    } else {\n                      correct = false;\n                      userOutputsCorrect[t] = false;\n                    }\n                  }\n\n                  str2 = \"You passed \" + numCorrect + \"/\" + challenge.inputs.length + \" cases, and it took you \" + timeElapsed / 1000 + \" seconds. The average run time was \" + runTime / challenge.inputs.length + \" ms and you used \" + memory + \" KB of memory!\\n\" + \"Did all test cases pass?: \" + correct + \"\\n\\n\";\n                  localStorage.setItem(\"numCorrect\", numCorrect);\n                  localStorage.setItem(\"runTime\", runTime);\n                  localStorage.setItem(\"memory\", memory); //for(var j = 0; j<challenge.outputs.length; j++){\n                  //    str2 = str2 + \"Input(s): \" + challenge.inputs[j] + \"\\nYour Output: \" + userOutputsSplit[j] + \"\\nExpected Output: \" + challenge.outputs[j] + \"\\nOutput correct?: \" + userOutputsCorrect[j] + \"\\n-------------------------------------------\\n\";\n                  //}\n                } else if (jsonGetSolution.stderr) {\n                  userOutputs = atob(jsonGetSolution.stderr);\n                  str2 = userOutputs;\n                  correct = false;\n                } else {\n                  userOutputs = atob(jsonGetSolution.compile_output);\n                  str2 = userOutputs;\n                  correct = false;\n                }\n\n                outputText.textContent = str2;\n                _context.next = 63;\n                break;\n\n              case 62:\n                document.getElementById('warningText').textContent = \"Please wait another \" + (30 - (currentTime - _this.state.timeOfLastRun) / 1000) + \" seconds to run again\";\n\n              case 63:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.timesUp = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var outputText, challenge, OCI, hasOwn, hasOpp, oppNumCorrect, oppRunTime, oppMemory, oppCorrect, didWin, numOfLoops, j, str2, str3, timeElapsed, str1, w, str5, userOutputs, userOutputsCorrect, correct, userOutputsSplit, numCorrect, runTime, memory, k, response, jsonResponse, jsonGetSolution, url, getSolution, t, winnerString;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this.setState({\n                isGameFinished: true\n              });\n\n              outputText = document.getElementById(\"output\");\n              challenge = _this.props.challenge.challenge;\n              OCI = '';\n              hasOwn = false;\n              hasOpp = false;\n              didWin = 2;\n              numOfLoops = 0;\n              socket.on('opponentsChallengeInfo', function (data) {\n                OCI = \"Your opponent passed \" + data.oppNumCorrect + \"/\" + challenge.inputs.length + \" cases. Their run time was \" + data.oppRunTime + \" ms and they used \" + data.oppMemory + \" KB of memory!\\n\" + \"Did all their test cases pass?: \" + data.oppCorrect + \"\\n\\n\";\n\n                _this.setState({\n                  theirFinishInfo: OCI\n                });\n\n                hasOpp = true;\n                console.log('OCI');\n\n                if (hasOwn === true) {\n                  console.log('hasown');\n                  str2 = str2 + OCI;\n                  var winnerString = '';\n\n                  if (oppNumCorrect < numCorrect) {\n                    winnerString = \"You passed more test cases, so you won :)\";\n                    str2 = str2 + \"\\nYou passed more test cases, so you won :)\";\n                    didWin = 1;\n                  } else if (oppNumCorrect > numCorrect) {\n                    winnerString = \"They passed more test cases, so you lost :(\";\n                    str2 = str2 + \"\\nThey passed more test cases, so you lost :(\";\n                    didWin = 0;\n                  } else {\n                    winnerString = \"You both had the same number of case right\";\n                    str2 = str2 + \"\\nYou both had the same number of case right\";\n\n                    if (runTime < oppRunTime) {\n                      winnerString = winnerString + \", but you had a better run time, so you win :^)\";\n                      str2 = str2 + \", but you had a better run time, so you win :^)\";\n                      didWin = 1;\n                    } else if (oppRunTime < runTime) {\n                      winnerString = winnerString + \", but they had a better run time, so you lost :^(\";\n                      str2 = str2 + \", but they had a better run time, so you lost :^(\";\n                      didWin = 0;\n                    } else {\n                      winnerString = winnerString + \", and you both somehow had the same runtime. Lets call it a draw\";\n                      str2 = str2 + \", and you both somehow had the same runtime. Lets call it a draw \";\n                      didWin = 2;\n                    }\n                  }\n\n                  outputText.textContent = str2;\n\n                  _this.setState({\n                    winnerInfo: winnerString\n                  });\n\n                  _this.showGameFinishedAlert();\n\n                  if (_this.props.user.isCompetitive) {\n                    if (didWin === 0) {\n                      if (_this.props.user.rank - 20 >= 100) {\n                        _this.props.updateUserRank({\n                          name: _this.props.user.name,\n                          rank: _this.props.user.rank,\n                          eloUpdate: -20\n                        });\n                      }\n                    } else if (didWin === 1) {\n                      if (_this.props.user.rank + 20 <= 799) {\n                        _this.props.updateUserRank({\n                          name: _this.props.user.name,\n                          rank: _this.props.user.rank,\n                          eloUpdate: 20\n                        });\n                      }\n                    }\n                  }\n                } else {\n                  console.log('no hasown yet');\n                  oppNumCorrect = data.oppNumCorrect;\n                  oppRunTime = data.oppRunTime;\n                  oppMemory = data.oppMemory;\n                  oppCorrect = data.oppCorrect;\n                }\n              });\n              j = 0;\n              str2 = '';\n              str3 = _this.state.input;\n              timeElapsed = new Date().getTime() - _this.state.startTime; //Building the main method that will be used to invoke the user made method, and adding an import of Scanner at the beginning\n\n              str1 = '\\tpublic static void main(String[] args){\\n';\n              w = 0;\n              str5 = '';\n              userOutputs = '';\n              userOutputsCorrect = {};\n              correct = true;\n              userOutputsSplit = {};\n              numCorrect = 0;\n              runTime = 0;\n              memory = 0;\n\n              for (j = 0; j < challenge.inputs.length; j++) {\n                str1 = str1 + \"\\t\\ttry{\\n\\t\\t\\tSystem.out.println(\" + challenge.methodName + \"(\";\n\n                for (k = 0; k < challenge.inputs[j].length; k++) {\n                  str1 = str1 + challenge.inputs[j][k];\n                  if (k < challenge.inputs[j].length - 1) str1 = str1 + ', ';\n                }\n\n                str1 = str1 + \"));}\\n\\t\\tcatch(Exception e){\\n\\t\\t\\tSystem.out.println(e.toString());\\n\\t\\t}\\n\";\n              }\n\n              str1 = str1 + \"\\t}\\n\";\n\n            case 25:\n              if (!(str3.length > 0)) {\n                _context2.next = 38;\n                break;\n              }\n\n              w = str3.indexOf('\\n');\n\n              if (!(str3.indexOf(\"public class Main\") !== 0)) {\n                _context2.next = 32;\n                break;\n              }\n\n              //Toss a main method in there that calls the input method and passes into it the subject input\n              str2 = str2 + str3.substring(0, w + 1);\n              str3 = str3.substring(w + 1, str3.length);\n              _context2.next = 36;\n              break;\n\n            case 32:\n              str2 = str2 + \"\\n\" + challenge.dataStructure + \"\\n\" + str3.substring(0, w + 1);\n              str3 = str3.substring(w + 1, str3.length);\n              str2 = str2.concat(str1, str3);\n              return _context2.abrupt(\"break\", 38);\n\n            case 36:\n              _context2.next = 25;\n              break;\n\n            case 38:\n              _context2.next = 40;\n              return fetch(\"https://judge0-extra.p.rapidapi.com/submissions\", {\n                method: \"POST\",\n                headers: {\n                  \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                  \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\",\n                  \"content-type\": \"application/json\",\n                  accept: \"application/json\"\n                },\n                body: JSON.stringify({\n                  source_code: str2,\n                  language_id: 62\n                })\n              });\n\n            case 40:\n              response = _context2.sent;\n              console.log('running code');\n              _context2.next = 44;\n              return response.json();\n\n            case 44:\n              jsonResponse = _context2.sent;\n              jsonGetSolution = {\n                status: {\n                  description: \"Queue\"\n                },\n                stderr: null,\n                compile_output: null\n              };\n              console.log('running code 2');\n\n            case 47:\n              if (!(jsonGetSolution.status.description !== \"Accepted\" && jsonGetSolution.stderr == null && jsonGetSolution.compile_output == null)) {\n                _context2.next = 63;\n                break;\n              }\n\n              numOfLoops++;\n\n              if (!(numOfLoops > 100)) {\n                _context2.next = 51;\n                break;\n              }\n\n              return _context2.abrupt(\"break\", 63);\n\n            case 51:\n              if (!jsonResponse.token) {\n                _context2.next = 61;\n                break;\n              }\n\n              console.log('token');\n              url = \"https://judge0-extra.p.rapidapi.com/submissions/\".concat(jsonResponse.token, \"?base64_encoded=true\");\n              _context2.next = 56;\n              return fetch(url, {\n                method: \"GET\",\n                headers: {\n                  \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\n                  \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\",\n                  \"content-type\": \"application/json\"\n                }\n              });\n\n            case 56:\n              getSolution = _context2.sent;\n              console.log('await get solution');\n              _context2.next = 60;\n              return getSolution.json();\n\n            case 60:\n              jsonGetSolution = _context2.sent;\n\n            case 61:\n              _context2.next = 47;\n              break;\n\n            case 63:\n              if (jsonGetSolution.stdout) {\n                console.log('solution got');\n                userOutputs = atob(jsonGetSolution.stdout);\n                runTime = jsonGetSolution.time;\n                memory = jsonGetSolution.memory;\n                userOutputsSplit = userOutputs.split(\"\\n\");\n\n                for (t = 0; t < userOutputsSplit.length; t++) {\n                  if (userOutputsSplit[t] === challenge.outputs[t]) {\n                    userOutputsCorrect[t] = true;\n                    numCorrect++;\n                  } else {\n                    correct = false;\n                    userOutputsCorrect[t] = false;\n                  }\n                }\n\n                str2 = \"You passed \" + numCorrect + \"/\" + challenge.inputs.length + \" cases. The run time was \" + runTime + \" ms and you used \" + memory + \" KB of memory!\\n\" + \"Did all test cases pass?: \" + correct + \"\\n\\n\";\n\n                _this.setState({\n                  yourFinishInfo: str2\n                }); // for(var j = 0; j<challenge.outputs.length; j++){\n                //  str2 = str2 + \"Input(s): \" + challenge.inputs[j] + \"\\nYour Output: \" + userOutputsSplit[j] + \"\\nExpected Output: \" + challenge.outputs[j] + \"\\nOutput correct?: \" + userOutputsCorrect[j] + \"\\n-------------------------------------------\\n\";\n                //}\n\n              } else if (jsonGetSolution.stderr) {\n                userOutputs = atob(jsonGetSolution.stderr);\n                str2 = userOutputs;\n                correct = false;\n              } else {\n                userOutputs = atob(jsonGetSolution.compile_output);\n                str2 = userOutputs;\n                correct = false;\n              }\n\n              hasOwn = true;\n              console.log('finished running code');\n              socket.emit('myChallengeInfo', {\n                room: _this.props.room.room,\n                numCorrect: numCorrect,\n                runTime: runTime,\n                memory: memory,\n                correct: correct\n              });\n\n              if (hasOpp) {\n                winnerString = '';\n                console.log('hasopp');\n                str2 = str2 + OCI;\n\n                if (oppNumCorrect < numCorrect) {\n                  winnerString = \"You passed more test cases, so you won :)\";\n                  str2 = str2 + \"\\nYou passed more test cases, so you won :)\";\n                  didWin = 1;\n                } else if (oppNumCorrect > numCorrect) {\n                  winnerString = \"They passed more test cases, so you lost :(\";\n                  str2 = str2 + \"\\nThey passed more test cases, so you lost :(\";\n                  didWin = 0;\n                } else {\n                  winnerString = \"You both had the same number of case right\";\n                  str2 = str2 + \"\\nYou both had the same number of case right\";\n\n                  if (runTime < oppRunTime) {\n                    winnerString = winnerString + \", but you had a better run time, so you win :^)\";\n                    str2 = str2 + \", but you had a better run time, so you win :^)\";\n                    didWin = 1;\n                  } else if (oppRunTime < runTime) {\n                    winnerString = winnerString + \", but they had a better run time, so you lost :^(\";\n                    str2 = str2 + \", but they had a better run time, so you lost :^(\";\n                    didWin = 0;\n                  } else {\n                    winnerString = winnerString + \", and you both somehow had the same runtime. Lets call it a draw\";\n                    str2 = str2 + \", and you both somehow had the same runtime. Lets call it a draw \";\n                    didWin = 2;\n                  }\n                }\n\n                outputText.textContent = str2;\n\n                _this.setState({\n                  winnerInfo: winnerString\n                });\n\n                _this.showGameFinishedAlert();\n\n                if (_this.props.user.isCompetitive) {\n                  if (didWin === 0) {\n                    if (_this.props.user.rank - 20 >= 100) {\n                      _this.props.updateUserRank({\n                        name: _this.props.user.name,\n                        rank: _this.props.user.rank,\n                        eloUpdate: -20\n                      });\n                    }\n                  } else if (didWin === 1) {\n                    if (_this.props.user.rank + 20 <= 799) {\n                      _this.props.updateUserRank({\n                        name: _this.props.user.name,\n                        rank: _this.props.user.rank,\n                        eloUpdate: 20\n                      });\n                    }\n                  }\n                }\n              }\n\n            case 68:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.intervalUpdate = function () {\n      if (localStorage.getItem(\"numCorrect\")) {\n        socket.emit(\"intervalUpdate\", {\n          numCorrect: localStorage.getItem(\"numCorrect\"),\n          runTime: localStorage.getItem(\"runTime\"),\n          memory: localStorage.getItem(\"memory\"),\n          room: _this.props.room.room\n        });\n      }\n    };\n\n    _this.showOppInfoAlert = function () {\n      _this.setState({\n        showOppInfo: true\n      });\n    };\n\n    _this.showGameFinishedAlert = function () {\n      _this.setState({\n        showGameFinished: true\n      });\n    };\n\n    _this.showConfirmLeave = function () {\n      _this.setState({\n        showConfirmLeave: true\n      });\n    };\n\n    _this.closeConfirmLeave = function () {\n      _this.setState({\n        showConfirmLeave: false\n      });\n    };\n\n    _this.mapMakeDescription = function () {\n      _this.props.challenge.challenge.description.split('%').map(function (line) {\n        return /*#__PURE__*/_jsxDEV(\"text\", {\n          children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 32\n          }, _assertThisInitialized(_this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 20\n        }, _assertThisInitialized(_this));\n      });\n    };\n\n    _this.state = {\n      input: '',\n      output: '',\n      language_id: 62,\n      user_input: '',\n      startTime: new Date().getTime(),\n      count: 0,\n      room: '',\n      timeOfLastRun: 0,\n      leaving: false,\n      mounted: false,\n      firstInput: false,\n      showOppInfo: false,\n      showGameFinished: false,\n      showConfirmLeave: false,\n      yourFinishInfo: '',\n      theirFinishInfo: '',\n      winnerInfo: '',\n      oppNumCorrect: 0,\n      oppRunTime: 0,\n      oppMemory: 0,\n      description: '',\n      exampleOne: '',\n      exampleTwo: '',\n      isGameFinished: false\n    };\n    socket.on('gameEnd', _this.opponentLeave);\n    socket.on(\"intervalUpdate\", function (data) {\n      _this.setState({\n        oppNumCorrect: data.numCorrect,\n        oppRunTime: data.runTime,\n        oppMemory: data.memory\n      });\n\n      _this.showOppInfoAlert();\n    }); // socket.on('reconnect', () =>{\n    //    console.log('reconnection');\n    //    socket.emit('rejoinGame', { room: this.props.room.room });\n    //});\n\n    return _this;\n  }\n\n  _createClass(ChallengePage, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!nextProps.isChallenge) {\n        console.log('nextProps');\n        this.props.history.push(\"/dashboard\"); // push user back to dashboard once the room and challenge have been removed from state tree\n      }\n      /*if (nextProps.errors) {\r\n        this.setState({\r\n          errors: nextProps.errors\r\n        });\r\n      }*/\n\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log('unmounting');\n      console.log(this.props.isChallenge);\n      console.log(this.props.user);\n      localStorage.removeItem('srcCode');\n      localStorage.removeItem('numCorrect');\n      localStorage.removeItem('runTime');\n      localStorage.removeItem('memory');\n      localStorage.removeItem('description');\n      localStorage.removeItem('exampleOne');\n      localStorage.removeItem('exampleTwo');\n      socket.emit('endGame', {\n        room: this.props.room.room\n      });\n      this.props.removeRoom();\n      this.props.removeChallenge();\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      if (localStorage.getItem('description')) {\n        this.setState({\n          description: localStorage.getItem('description'),\n          exampleOne: localStorage.getItem('exampleOne'),\n          exampleTwo: localStorage.getItem('exampleTwo')\n        });\n      } else {\n        var description = this.props.challenge.challenge.description;\n        var exampleOne = description.substring(description.indexOf('!') + 1, description.indexOf('@'));\n        var exampleTwo = description.substring(description.indexOf('@') + 1, description.length);\n        exampleOne = exampleOne.split('%').map(function (line) {\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 74\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 62\n          }, _this2);\n        });\n        exampleTwo = exampleTwo.split('%').map(function (line) {\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 74\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 62\n          }, _this2);\n        });\n        description = description.substring(0, description.indexOf('!'));\n        description = description.split('%').map(function (line) {\n          return /*#__PURE__*/_jsxDEV(\"text\", {\n            children: [line, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 77\n            }, _this2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 64\n          }, _this2);\n        });\n        this.setState({\n          description: description,\n          exampleOne: exampleOne,\n          exampleTwo: exampleTwo\n        });\n        localStorage.setItem('description', description);\n        localStorage.setItem('exampleOne', exampleOne);\n        localStorage.setItem('exampleTwo', exampleTwo);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.state.leaving) {\n        socket.emit('rejoinGame', {\n          room: this.props.room.room\n        });\n      }\n    }\n  }, {\n    key: \"enableTab\",\n    value: function enableTab(id) {\n      var el = document.getElementById(id);\n\n      el.onkeydown = function (e) {\n        if (e.keyCode === 9) {\n          // tab was pressed\n          // get caret position/selection\n          var val = this.value,\n              start = this.selectionStart,\n              end = this.selectionEnd; // set textarea value to: text before caret + tab + text after caret\n\n          this.value = val.substring(0, start) + '\\t' + val.substring(end); // put caret at right position again\n\n          this.selectionStart = this.selectionEnd = start + 1; // prevent the focus lose\n\n          return false;\n        }\n      };\n    }\n  }, {\n    key: \"rejoinRoom\",\n    value: function rejoinRoom() {\n      socket.emit('rejoinRoom', {\n        room: this.props.room\n      });\n    }\n  }, {\n    key: \"render\",\n    value:\n    /*makeDescription = () => {\r\n        var lineBreak = document.createElement(\"br\");\r\n          lineBreak.type = \"br\";\r\n        const descriptionSplit = this.props.challenge.challenge.description.split('%');\r\n            var descText = document.createElement('text');\r\n        descText.type = \"text\";\r\n        descText.innerHTML = '';\r\n          console.log(lineBreak);\r\n          for(var i = 0; i<descriptionSplit.length; i++){\r\n            if(descriptionSplit[i].charAt(0)==='!'){\r\n                descText.innerHTML = descText.innerHTML + 'Example 1:' + lineBreak;\r\n            }\r\n            else if(descriptionSplit[i].charAt(0)==='@'){\r\n                descText.innerHTML = descText.innerHTML + 'Example 2:' + lineBreak;\r\n            }\r\n            descText.innerHTML = descText.innerHTML + descriptionSplit[i] + lineBreak;\r\n            //console.log('hi');\r\n           // console.log(descText.innerHTML);\r\n          }\r\n        document.getElementById('description').innerHTML = descText.innerHTML;\r\n          \r\n    }*/\n    function render() {\n      var challenge = this.props.challenge.challenge;\n      var room = this.props.room.room;\n      console.log('render');\n      var splitImports;\n\n      if (this.state.firstInput === false) {\n        var DS = \" \\n\";\n\n        if (challenge.dataStructure !== \"  \") {\n          DS = \"/*\\n\" + challenge.dataStructure + \"\\n*//*\\n\";\n        }\n\n        if (challenge.imports !== \" \") {\n          splitImports = challenge.imports.split('|');\n\n          for (var j = 0; j < splitImports.length; j++) {\n            DS = DS + splitImports[j] + \"\\n\";\n          }\n        }\n\n        DS = DS + \"public class Main{\\n\\tpublic static \" + challenge.outputType + \" \" + challenge.methodName + \"(\";\n\n        for (var l = 0; l < challenge.inputTypes.length; l++) {\n          DS = DS + challenge.inputTypes[l] + \" \" + challenge.inputVarNames[l];\n\n          if (l < challenge.inputTypes.length - 1) {\n            DS = DS + \", \";\n          }\n        }\n\n        DS = DS + \"){\\n\\n\\t}\\n}\";\n        var selected;\n\n        if (localStorage.getItem('srcCode')) {\n          if (localStorage.getItem('srcCode') !== DS) {\n            // localStorage.setItem('description', description);\n            selected = DS;\n            localStorage.setItem('srcCode', DS); //document.getElementById('source').innerHTML = DS;\n            //document.getElementById('description').innerHTML = description;\n\n            this.setState({\n              input: DS\n            });\n            if (this.state.firstInput === false) window.location.reload(false);\n          } else {\n            // description = localStorage.getItem('description');\n            selected = localStorage.getItem('srcCode');\n          }\n        } else {\n          selected = DS;\n          localStorage.setItem('srcCode', DS); // localStorage.setItem('description', description);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challengepagebg\",\n        children: /*#__PURE__*/_jsxDEV(PanelGroup, {\n          direction: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"transparent\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: \"10px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"title\",\n                  children: challenge.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 858,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 856,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: \"5px\",\n                marginRight: \"5px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"d-flex justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  id: \"description\",\n                  children: this.state.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"d-flex justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  id: \"exampleTitle\",\n                  children: [this.state.exampleOne === '' ? '' : 'Example 1:', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 104\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 113\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"d-flex justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  id: \"example\",\n                  children: this.state.exampleOne\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 876,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"d-flex justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  id: \"exampleTitle\",\n                  children: [this.state.exampleTwo === '' ? '' : 'Example 2:', /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 104\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 113\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"d-flex justify-content-left\",\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  id: \"example\",\n                  children: this.state.exampleTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 885,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: \"100vw\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Alert, {\n              show: this.state.showOppInfo,\n              variant: \"info\",\n              dismissable: true,\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"Little update on your opponents progress...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 896,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"They currently have passed \", this.state.oppNumCorrect, \" cases, have a run time of \", this.state.oppRunTime, \" ms and are using \", this.state.oppMemory, \" KBs of memory.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              show: this.state.showGameFinished,\n              variant: \"info\",\n              dismissable: true,\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: this.state.winnerInfo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Your game data looked like:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 51\n                }, this), this.state.yourFinishInfo, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 87\n                }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 96\n                }, this), \"Their data looked like: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 912,\n                  columnNumber: 129\n                }, this), this.state.theirFinishInfo]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Alert, {\n              show: this.state.showConfirmLeave,\n              variant: \"info\",\n              dismissable: true,\n              children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n                children: \"Are you sure you would like to leave?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Be warned, abandoning incurs a cooldown!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 923,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 924,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.confirmedAbandon,\n                children: \"Leave\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 926,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: this.closeConfirmLeave,\n                children: \"Nevermind\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 929,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 915,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row justify-content-center\",\n              style: {\n                height: \"8vh\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"text\", {\n                style: {\n                  fontFamily: \"monospace\",\n                  fontSize: \"30px\"\n                },\n                className: \"brand-logo black-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"material-icons\",\n                  children: \"code\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 944,\n                  columnNumber: 25\n                }, this), \"CompCoder\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 937,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 936,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"d-flex justify-content-between\",\n              style: {\n                height: \"8vh\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n                onClick: this.back,\n                style: {\n                  marginLeft: \"20px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-cog fa-fw\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 957,\n                  columnNumber: 29\n                }, this), \" Back\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 951,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  marginRight: \"3vw\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Timer, {\n                  timesUp: this.timesUp,\n                  intervalUpdate: this.intervalUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 960,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 959,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row justify-content-center\",\n              style: {\n                height: \"65vh\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Editor, {\n                  required: true,\n                  height: \"65vh\",\n                  defaultLanguage: \"java\",\n                  defaultValue: DS,\n                  name: \"solution\",\n                  id: \"source\",\n                  onChange: this.input,\n                  editorProps: {\n                    blockingScroll: true\n                  },\n                  children: DS\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 967,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 966,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  id: \"output\",\n                  children: this.state.output\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 981,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 980,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 965,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"row justify-content-center\",\n              style: {\n                height: \"9vh\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                style: {\n                  width: \"150px\",\n                  borderRadius: \"3px\",\n                  letterSpacing: \"1.5px\",\n                  marginTop: \"1rem\"\n                },\n                type: \"submit\",\n                className: \"btn btn-large waves-effect waves-light hoverable blue accent-3\",\n                onClick: this.submit,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fas fa-cog fa-fw\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1001,\n                  columnNumber: 21\n                }, this), \" Run\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n                id: \"warningText\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1003,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 892,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return ChallengePage;\n}(Component);\n\nChallengePage.propTypes = {\n  updateUserRank: PropTypes.func.isRequired,\n  coolDown: PropTypes.func.isRequired,\n  removeChallenge: PropTypes.func.isRequired,\n  challengeUser: PropTypes.func.isRequired,\n  challenge: PropTypes.object.isRequired,\n  isChallenge: PropTypes.bool.isRequired,\n  room: PropTypes.string.isRequired,\n  isRoom: PropTypes.bool.isRequired,\n  removeRoom: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    challenge: state.auth.challenge,\n    isChallenge: state.auth.isChallenge,\n    room: state.auth.room,\n    isRoom: state.auth.isRoom,\n    user: state.auth.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeChallenge: removeChallenge,\n  removeRoom: removeRoom,\n  challengeUser: challengeUser,\n  updateUserRank: updateUserRank,\n  coolDown: coolDown\n})(ChallengePage);","map":{"version":3,"sources":["C:/Users/jacob/Comp-Coder/client/src/components/dashboard/ChallengePage.js"],"names":["React","Component","PropTypes","connect","removeChallenge","removeRoom","challengeUser","updateUserRank","coolDown","Timer","socket","Col","Alert","Button","Editor","PanelGroup","ChallengePage","props","back","event","preventDefault","state","isGameFinished","showConfirmLeave","setState","leaving","emit","room","history","push","confirmedAbandon","name","user","time","Date","getTime","opponentLeave","backMyFault","input","value","firstInput","parseInt","split","challenge","i","localStorage","setItem","count","userInput","user_input","target","submit","e","currentTime","timeOfLastRun","outputText","document","getElementById","textContent","j","str2","str3","timeElapsed","startTime","str1","w","str5","userOutputs","userOutputsCorrect","correct","userOutputsSplit","numCorrect","runTime","memory","numOfLoops","inputs","length","methodName","k","indexOf","substring","dataStructure","concat","fetch","method","headers","accept","body","JSON","stringify","source_code","language_id","response","json","jsonResponse","jsonGetSolution","status","description","stderr","compile_output","token","url","getSolution","stdout","atob","t","outputs","timesUp","OCI","hasOwn","hasOpp","didWin","on","data","oppNumCorrect","oppRunTime","oppMemory","oppCorrect","theirFinishInfo","console","log","winnerString","winnerInfo","showGameFinishedAlert","isCompetitive","rank","eloUpdate","yourFinishInfo","intervalUpdate","getItem","showOppInfoAlert","showOppInfo","showGameFinished","closeConfirmLeave","mapMakeDescription","map","line","output","mounted","exampleOne","exampleTwo","nextProps","isChallenge","removeItem","id","el","onkeydown","keyCode","val","start","selectionStart","end","selectionEnd","splitImports","DS","imports","outputType","l","inputTypes","inputVarNames","selected","window","location","reload","marginTop","marginLeft","marginRight","width","height","fontFamily","fontSize","blockingScroll","borderRadius","letterSpacing","propTypes","func","isRequired","object","bool","string","isRoom","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeChallenge, removeRoom, challengeUser } from \"../../actions/challengeActions\";\r\nimport { updateUserRank, coolDown } from \"../../actions/authActions\";\r\n\r\nimport \"unirest\";\r\nimport \"./ChallengePage.css\";\r\nimport Timer from \"./Timer\";\r\nimport socket from \"../../socket\";\r\nimport {Col, Alert, Button} from \"react-bootstrap\";\r\n\r\nimport Editor from \"@monaco-editor/react\";\r\nimport PanelGroup from 'react-panelgroup';\r\n\r\n\r\n\r\nclass ChallengePage extends Component { \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state ={\r\n            input: '',\r\n            output: '',\r\n            language_id: 62,\r\n            user_input: '',\r\n            startTime: new Date().getTime(),\r\n            count: 0,\r\n            room: '',\r\n            timeOfLastRun: 0,\r\n            leaving: false,\r\n            mounted: false,\r\n            firstInput: false,\r\n            showOppInfo: false,\r\n            showGameFinished: false,\r\n            showConfirmLeave: false,\r\n            yourFinishInfo: '',\r\n            theirFinishInfo: '',\r\n            winnerInfo: '',\r\n            oppNumCorrect: 0,\r\n            oppRunTime: 0,\r\n            oppMemory: 0, \r\n            description: '',\r\n            exampleOne: '',\r\n            exampleTwo: '',\r\n            isGameFinished: false\r\n        \r\n\r\n        };\r\n\r\n\r\n        socket.on('gameEnd', this.opponentLeave);\r\n\r\n        socket.on(\"intervalUpdate\", (data) => {\r\n\r\n            this.setState({oppNumCorrect: data.numCorrect, oppRunTime: data.runTime, oppMemory: data.memory})\r\n            this.showOppInfoAlert();\r\n        })\r\n\r\n       // socket.on('reconnect', () =>{\r\n       //    console.log('reconnection');\r\n       //    socket.emit('rejoinGame', { room: this.props.room.room });\r\n        //});\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (!nextProps.isChallenge) {\r\n            console.log('nextProps');\r\n            this.props.history.push(\"/dashboard\"); // push user back to dashboard once the room and challenge have been removed from state tree\r\n        }\r\n        /*if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }*/\r\n    }\r\n\r\n\r\n    componentWillUnmount(){\r\n        console.log('unmounting');\r\n        console.log(this.props.isChallenge);\r\n        console.log(this.props.user);\r\n\r\n        localStorage.removeItem('srcCode');\r\n        localStorage.removeItem('numCorrect');\r\n        localStorage.removeItem('runTime');\r\n        localStorage.removeItem('memory');\r\n        localStorage.removeItem('description');\r\n        localStorage.removeItem('exampleOne');\r\n        localStorage.removeItem('exampleTwo');\r\n\r\n        socket.emit('endGame', {room: this.props.room.room});\r\n\r\n\r\n        this.props.removeRoom();\r\n        this.props.removeChallenge();\r\n    \r\n     }\r\n\r\n     componentWillMount() {\r\n         if(localStorage.getItem('description')){\r\n             this.setState({description: localStorage.getItem('description')\r\n             , exampleOne: localStorage.getItem('exampleOne'),\r\n             exampleTwo: localStorage.getItem('exampleTwo')})\r\n         }\r\n         else{\r\n            var description = this.props.challenge.challenge.description;\r\n\r\n            var exampleOne = description.substring(description.indexOf('!') + 1, description.indexOf('@'));\r\n            var exampleTwo = description.substring(description.indexOf('@') + 1, description.length);\r\n\r\n            exampleOne = exampleOne.split('%').map((line) => <text>{line}<br/></text>);\r\n            exampleTwo = exampleTwo.split('%').map((line) => <text>{line}<br/></text>);\r\n            \r\n\r\n            description = description.substring(0, description.indexOf('!'));\r\n\r\n\r\n            description = description.split('%').map((line) => <text >{line}<br/></text>);\r\n\r\n            this.setState({description: description, exampleOne: exampleOne, exampleTwo: exampleTwo});\r\n            localStorage.setItem('description', description);\r\n            localStorage.setItem('exampleOne', exampleOne);\r\n            localStorage.setItem('exampleTwo', exampleTwo);\r\n         }\r\n     }\r\n\r\n     componentDidMount(){\r\n         \r\n         //this.enableTab('source');\r\n     }\r\n      \r\n\r\n\r\n    back = (event) => {\r\n        event.preventDefault();\r\n        if(!this.state.isGameFinished){\r\n            this.showConfirmLeave();\r\n        }\r\n        else{\r\n            this.setState({leaving: true});\r\n            socket.emit('endGame', {room: this.props.room.room});\r\n            this.props.history.push('/dashboard');\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    confirmedAbandon = (event) => {\r\n        event.preventDefault();\r\n        this.setState({leaving: true});\r\n        socket.emit('endGame', {room: this.props.room.room});\r\n        this.props.coolDown({name: this.props.user.name, time: new Date().getTime() +1800000});\r\n\r\n        this.props.history.push('/dashboard');\r\n    }\r\n\r\n    opponentLeave = () => {\r\n\r\n        this.setState({leaving: true});\r\n        //socket.emit('opponentLeft', {room:this.props.room.room});\r\n\r\n        this.props.history.push('/dashboard');\r\n\r\n    }\r\n\r\n    backMyFault = () => {\r\n        this.setState({leaving: true});\r\n\r\n        socket.emit('endGame', {room: this.props.room.room});\r\n        this.props.history.push('/dashboard');\r\n\r\n        \r\n    }\r\n\r\n    input = (value, event) => {\r\n       // event.preventDefault();\r\n\r\n        if(!this.state.firstInput){\r\n            if(parseInt(this.props.room.room.split('/')[1])!== this.props.challenge.challenge.i){\r\n                //this.back();\r\n\r\n                this.backMyFault();  \r\n            }\r\n        }\r\n        socket.emit('checkRoom');\r\n       // console.log(this.props.room);\r\n       // console.log(this.props.challenge);\r\n\r\n       // console.log(socket);\r\n\r\n       // if(this.state.count===0)\r\n      //      this.enableTab('source');\r\n\r\n        localStorage.setItem('srcCode', value);    //store input in local storage so it is preserved on refresh    \r\n        this.setState({ input: value, count: 1, firstInput: true});\r\n\r\n\r\n    };\r\n\r\n    userInput = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ user_input: event.target.value });\r\n      };\r\n\r\n    submit = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        var currentTime = new Date().getTime();\r\n\r\n\r\n        if((currentTime - this.state.timeOfLastRun)/1000 >= 30){\r\n\r\n        this.setState({timeOfLastRun: new Date().getTime()});  \r\n        outputText = document.getElementById('output').textContent;\r\n        \r\n        let outputText = document.getElementById(\"output\");\r\n        const { challenge } = this.props.challenge;\r\n\r\n        var j = 0;\r\n        var str2 = ''; \r\n        var str3 = this.state.input;\r\n        const timeElapsed = new Date().getTime() - this.state.startTime;\r\n        //Building the main method that will be used to invoke the user made method, and adding an import of Scanner at the beginning\r\n        \r\n\r\n        var str1 = '\\tpublic static void main(String[] args){\\n';\r\n\r\n        var w = 0;\r\n        var str5 = '';\r\n        var userOutputs = '';\r\n        var userOutputsCorrect = {};\r\n        var correct = true;\r\n        var userOutputsSplit ={};\r\n        var numCorrect = 0;\r\n        var runTime = 0;\r\n        var memory = 0;\r\n        var numOfLoops = 0;\r\n\r\n\r\n        for(var j = 0; j <challenge.inputs.length; j++){\r\n            str1 = str1 + \"\\t\\ttry{\\n\\t\\t\\tSystem.out.println(\" + challenge.methodName + \"(\";\r\n            for(var k = 0; k<challenge.inputs[j].length; k++){\r\n                str1 = str1 + challenge.inputs[j][k];\r\n                if(k<challenge.inputs[j].length-1)\r\n                    str1= str1 + ', ';\r\n            }\r\n            str1 = str1 + \"));}\\n\\t\\tcatch(Exception e){\\n\\t\\t\\tSystem.out.println(e.toString());\\n\\t\\t}\\n\";\r\n        }\r\n        str1 = str1 + \"\\t}\\n\";\r\n\r\n\r\n\r\n        while(str3.length>0){\r\n            w = str3.indexOf('\\n');\r\n            if(str3.indexOf(\"public class Main\")!==0){      //Toss a main method in there that calls the input method and passes into it the subject input\r\n                str2 = str2 + str3.substring(0, w+1);\r\n                str3 = str3.substring(w+1, str3.length);\r\n            }\r\n            else{\r\n                str2 = str2 + \"\\n\" + challenge.dataStructure + \"\\n\" + str3.substring(0, w+1);\r\n                str3 = str3.substring(w+1, str3.length);\r\n                str2 = str2.concat(str1, str3);\r\n                break;\r\n            }\r\n        }  \r\n\r\n        \r\n\r\n        const response = await fetch(\r\n            \"https://judge0-extra.p.rapidapi.com/submissions\",\r\n            {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\", \r\n                    \"content-type\": \"application/json\",\r\n                    accept: \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    source_code: str2,\r\n                    language_id: 62\r\n                }),\r\n                }\r\n            \r\n            );\r\n            \r\n            const jsonResponse = await response.json();\r\n            \r\n\r\n            let jsonGetSolution ={\r\n                status: { description: \"Queue\" },\r\n                stderr: null,\r\n                compile_output: null\r\n            };\r\n\r\n\r\n            while(\r\n                (jsonGetSolution.status.description!== \"Accepted\"&&\r\n                jsonGetSolution.stderr == null &&\r\n                jsonGetSolution.compile_output == null)\r\n            ) {\r\n\r\n                numOfLoops++;\r\n                if(numOfLoops>100){\r\n                    break;\r\n                }\r\n                if(jsonResponse.token){\r\n\r\n                    let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n                    \r\n                    const getSolution = await fetch(url, {\r\n                        method: \"GET\",\r\n                        headers: {\r\n                            \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                            \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\", \r\n                            \"content-type\": \"application/json\",\r\n                          },\r\n                    });\r\n\r\n                    jsonGetSolution = await getSolution.json();\r\n                }\r\n            }\r\n\r\n            if(jsonGetSolution.stdout){\r\n                userOutputs = atob(jsonGetSolution.stdout);\r\n                runTime = jsonGetSolution.time;\r\n                memory = jsonGetSolution.memory;\r\n\r\n                userOutputsSplit = userOutputs.split(\"\\n\");\r\n                \r\n                for(var t = 0; t<userOutputsSplit.length; t++){\r\n                    if(userOutputsSplit[t] === challenge.outputs[t]){\r\n                        userOutputsCorrect[t] = true;\r\n                        numCorrect++;\r\n                    \r\n                    }    \r\n                    else{\r\n                    \r\n                        correct = false;\r\n                        userOutputsCorrect[t] = false;\r\n                    }\r\n                }\r\n                str2 = \"You passed \" + numCorrect + \"/\" + challenge.inputs.length + \" cases, and it took you \" + (timeElapsed/1000) + \" seconds. The average run time was \" + (runTime/challenge.inputs.length) + \" ms and you used \" + memory + \" KB of memory!\\n\" + \"Did all test cases pass?: \" + correct +\"\\n\\n\";\r\n    \r\n                localStorage.setItem(\"numCorrect\", numCorrect);\r\n                localStorage.setItem(\"runTime\", runTime);\r\n                localStorage.setItem(\"memory\", memory);\r\n\r\n                //for(var j = 0; j<challenge.outputs.length; j++){\r\n                //    str2 = str2 + \"Input(s): \" + challenge.inputs[j] + \"\\nYour Output: \" + userOutputsSplit[j] + \"\\nExpected Output: \" + challenge.outputs[j] + \"\\nOutput correct?: \" + userOutputsCorrect[j] + \"\\n-------------------------------------------\\n\";\r\n                //}\r\n            }    \r\n            else if(jsonGetSolution.stderr){\r\n                userOutputs = atob(jsonGetSolution.stderr);\r\n                str2 = userOutputs;\r\n                correct = false;\r\n            }\r\n    \r\n            else{\r\n                userOutputs = atob(jsonGetSolution.compile_output);\r\n                str2 = userOutputs;\r\n                correct = false;\r\n            }\r\n            outputText.textContent = str2;\r\n        }\r\n        else{\r\n            document.getElementById('warningText').textContent = \"Please wait another \" + (30 - (currentTime - this.state.timeOfLastRun)/1000) + \" seconds to run again\"; \r\n        }\r\n    \r\n    \r\n    };\r\n\r\n    enableTab(id) {\r\n        var el = document.getElementById(id);\r\n        el.onkeydown = function(e) {\r\n            if (e.keyCode === 9) { // tab was pressed\r\n    \r\n                // get caret position/selection\r\n                var val = this.value,\r\n                    start = this.selectionStart,\r\n                    end = this.selectionEnd;\r\n    \r\n                // set textarea value to: text before caret + tab + text after caret\r\n                this.value = val.substring(0, start) + '\\t' + val.substring(end);\r\n    \r\n                // put caret at right position again\r\n                this.selectionStart = this.selectionEnd = start + 1;\r\n    \r\n                // prevent the focus lose\r\n                return false;\r\n    \r\n            }\r\n        };\r\n    }\r\n\r\n    rejoinRoom(){\r\n        socket.emit('rejoinRoom', {room:this.props.room});\r\n    }\r\n\r\n    timesUp = async () => {\r\n        this.setState({isGameFinished: true});\r\n        let outputText = document.getElementById(\"output\");\r\n        const { challenge } = this.props.challenge;\r\n        var OCI = '';\r\n        var hasOwn = false;\r\n        var hasOpp = false;\r\n        var oppNumCorrect;\r\n        var oppRunTime;\r\n        var oppMemory;\r\n        var oppCorrect;\r\n        var didWin = 2;\r\n        var numOfLoops = 0;\r\n\r\n\r\n        socket.on('opponentsChallengeInfo', (data) => {\r\n            OCI = \"Your opponent passed \" + data.oppNumCorrect + \"/\" + challenge.inputs.length + \" cases. Their run time was \" + data.oppRunTime + \" ms and they used \" + data.oppMemory + \" KB of memory!\\n\" + \"Did all their test cases pass?: \" + data.oppCorrect +\"\\n\\n\";\r\n            this.setState({theirFinishInfo: OCI});\r\n            hasOpp = true;\r\n\r\n            console.log('OCI');\r\n            if(hasOwn === true){\r\n                console.log('hasown');\r\n                str2 = str2 + OCI;\r\n                var winnerString = '';\r\n\r\n                if(oppNumCorrect<numCorrect){\r\n                    winnerString = \"You passed more test cases, so you won :)\";\r\n                    str2 = str2 + \"\\nYou passed more test cases, so you won :)\";\r\n                    didWin = 1;\r\n\r\n                }\r\n                else if(oppNumCorrect>numCorrect){\r\n                    winnerString = \"They passed more test cases, so you lost :(\";\r\n                    str2 = str2 + \"\\nThey passed more test cases, so you lost :(\";\r\n                    didWin = 0;\r\n                }\r\n\r\n                else{\r\n                    winnerString = \"You both had the same number of case right\";\r\n                    str2 = str2 + \"\\nYou both had the same number of case right\";\r\n                    if(runTime < oppRunTime){\r\n                        winnerString = winnerString + \", but you had a better run time, so you win :^)\";\r\n                        str2 = str2 + \", but you had a better run time, so you win :^)\";\r\n                        didWin = 1;\r\n                    }\r\n                    else if(oppRunTime < runTime){\r\n                        winnerString = winnerString + \", but they had a better run time, so you lost :^(\";\r\n                        str2 = str2 + \", but they had a better run time, so you lost :^(\";\r\n                        didWin = 0;\r\n                    }\r\n                    else{\r\n                        winnerString = winnerString + \", and you both somehow had the same runtime. Lets call it a draw\";\r\n                        str2 = str2 + \", and you both somehow had the same runtime. Lets call it a draw \";\r\n                        didWin = 2;\r\n                    \r\n                    }\r\n                }\r\n                outputText.textContent = str2;\r\n                this.setState({winnerInfo: winnerString});\r\n                this.showGameFinishedAlert();\r\n                if(this.props.user.isCompetitive){\r\n                    if(didWin === 0){\r\n                        if(this.props.user.rank - 20 >= 100){\r\n                            this.props.updateUserRank({name: this.props.user.name, rank: this.props.user.rank, eloUpdate: -20})\r\n                        }\r\n                    }\r\n                    else if(didWin === 1){\r\n                        if(this.props.user.rank + 20 <= 799){\r\n                            this.props.updateUserRank({name: this.props.user.name, rank: this.props.user.rank, eloUpdate: 20})\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            else{\r\n                console.log('no hasown yet');\r\n                oppNumCorrect = data.oppNumCorrect;\r\n                oppRunTime = data.oppRunTime;\r\n                oppMemory = data.oppMemory;\r\n                oppCorrect = data.oppCorrect;\r\n            }\r\n        });\r\n    \r\n        var j = 0;\r\n        var str2 = ''; \r\n        var str3 = this.state.input;\r\n        const timeElapsed = new Date().getTime() - this.state.startTime;\r\n    \r\n        //Building the main method that will be used to invoke the user made method, and adding an import of Scanner at the beginning\r\n            \r\n    \r\n        var str1 = '\\tpublic static void main(String[] args){\\n';\r\n    \r\n        var w = 0;\r\n            var str5 = '';\r\n            var userOutputs = '';\r\n            var userOutputsCorrect = {};\r\n            var correct = true;\r\n            var userOutputsSplit ={};\r\n            var numCorrect = 0;\r\n            var runTime = 0;\r\n            var memory = 0;\r\n    \r\n    \r\n            for(var j = 0; j <challenge.inputs.length; j++){\r\n                str1 = str1 + \"\\t\\ttry{\\n\\t\\t\\tSystem.out.println(\" + challenge.methodName + \"(\";\r\n                for(var k = 0; k<challenge.inputs[j].length; k++){\r\n                    str1 = str1 + challenge.inputs[j][k];\r\n                    if(k<challenge.inputs[j].length-1)\r\n                        str1= str1 + ', ';\r\n                }\r\n                str1 = str1 + \"));}\\n\\t\\tcatch(Exception e){\\n\\t\\t\\tSystem.out.println(e.toString());\\n\\t\\t}\\n\";\r\n            }\r\n            str1 = str1 + \"\\t}\\n\";\r\n    \r\n    \r\n    \r\n            while(str3.length>0){\r\n                w = str3.indexOf('\\n');\r\n                if(str3.indexOf(\"public class Main\")!==0){      //Toss a main method in there that calls the input method and passes into it the subject input\r\n                    str2 = str2 + str3.substring(0, w+1);\r\n                    str3 = str3.substring(w+1, str3.length);\r\n                }\r\n                else{\r\n                    str2 = str2 + \"\\n\" + challenge.dataStructure + \"\\n\" + str3.substring(0, w+1);\r\n                    str3 = str3.substring(w+1, str3.length);\r\n                    str2 = str2.concat(str1, str3);\r\n                    break;\r\n                }\r\n            } \r\n            \r\n            \r\n            \r\n    \r\n            const response = await fetch(\r\n                \"https://judge0-extra.p.rapidapi.com/submissions\",\r\n                {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                        \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                        \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\", \r\n                        \"content-type\": \"application/json\",\r\n                        accept: \"application/json\",\r\n                    },\r\n                    body: JSON.stringify({\r\n                        source_code: str2,\r\n                        language_id: 62\r\n                    }),\r\n                    }\r\n                \r\n                );\r\n\r\n                console.log('running code');\r\n                \r\n                const jsonResponse = await response.json();\r\n                \r\n    \r\n                let jsonGetSolution ={\r\n                    status: { description: \"Queue\" },\r\n                    stderr: null,\r\n                    compile_output: null\r\n                };\r\n                console.log('running code 2');\r\n    \r\n    \r\n                while(\r\n                    (jsonGetSolution.status.description!== \"Accepted\"&&\r\n                    jsonGetSolution.stderr == null &&\r\n                    jsonGetSolution.compile_output == null)\r\n                ) {\r\n                    numOfLoops++;\r\n                    if(numOfLoops>100){\r\n                        break;\r\n                    }\r\n                    if(jsonResponse.token){\r\n\r\n                        console.log('token');\r\n    \r\n                        let url = `https://judge0-extra.p.rapidapi.com/submissions/${jsonResponse.token}?base64_encoded=true`;\r\n                        \r\n                        const getSolution = await fetch(url, {\r\n                            method: \"GET\",\r\n                            headers: {\r\n                                \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n                                \"x-rapidapi-key\": \"e51bc475ffmshb688bd7febd7bdap175735jsn486eb27febcb\", \r\n                                \"content-type\": \"application/json\",\r\n                              },\r\n                        });\r\n                        console.log('await get solution');\r\n    \r\n                        jsonGetSolution = await getSolution.json();\r\n                    }\r\n                }\r\n    \r\n                if(jsonGetSolution.stdout){\r\n                    console.log('solution got');\r\n\r\n                    userOutputs = atob(jsonGetSolution.stdout);\r\n                    runTime = jsonGetSolution.time;\r\n                    memory = jsonGetSolution.memory;\r\n\r\n    \r\n                    userOutputsSplit = userOutputs.split(\"\\n\");\r\n                    \r\n                    for(var t = 0; t<userOutputsSplit.length; t++){\r\n                        if(userOutputsSplit[t] === challenge.outputs[t]){\r\n                            \r\n                            userOutputsCorrect[t] = true;\r\n                            numCorrect++;\r\n                        \r\n                        }    \r\n                        else{\r\n                        \r\n                            correct = false;\r\n                            userOutputsCorrect[t] = false;\r\n                        }\r\n                    }\r\n\r\n                    \r\n                    str2 = \"You passed \" + numCorrect + \"/\" + challenge.inputs.length + \" cases. The run time was \" + runTime + \" ms and you used \" + memory + \" KB of memory!\\n\" + \"Did all test cases pass?: \" + correct +\"\\n\\n\";\r\n                    this.setState({yourFinishInfo: str2});\r\n        \r\n                   // for(var j = 0; j<challenge.outputs.length; j++){\r\n                      //  str2 = str2 + \"Input(s): \" + challenge.inputs[j] + \"\\nYour Output: \" + userOutputsSplit[j] + \"\\nExpected Output: \" + challenge.outputs[j] + \"\\nOutput correct?: \" + userOutputsCorrect[j] + \"\\n-------------------------------------------\\n\";\r\n                    //}\r\n                }    \r\n                else if(jsonGetSolution.stderr){\r\n                    userOutputs = atob(jsonGetSolution.stderr);\r\n                    str2 = userOutputs;\r\n                    correct = false;\r\n                }\r\n        \r\n                else{\r\n                    userOutputs = atob(jsonGetSolution.compile_output);\r\n                    str2 = userOutputs;\r\n                    correct = false;\r\n                }\r\n            \r\n\r\n                hasOwn = true;\r\n                console.log('finished running code');\r\n\r\n                socket.emit('myChallengeInfo', {room: this.props.room.room, numCorrect: numCorrect, runTime: runTime, memory:memory, correct:correct});\r\n                if(hasOpp){\r\n                    var winnerString = '';\r\n                    console.log('hasopp');\r\n                    str2 = str2 + OCI;\r\n                    if(oppNumCorrect<numCorrect){\r\n                        winnerString = \"You passed more test cases, so you won :)\";\r\n                        str2 = str2 + \"\\nYou passed more test cases, so you won :)\";\r\n                        didWin = 1;\r\n\r\n                    }\r\n                    else if(oppNumCorrect>numCorrect){\r\n                        winnerString = \"They passed more test cases, so you lost :(\";\r\n                        str2 = str2 + \"\\nThey passed more test cases, so you lost :(\";\r\n                        didWin = 0;\r\n                    }\r\n    \r\n                    else{\r\n                        winnerString = \"You both had the same number of case right\";\r\n                        str2 = str2 + \"\\nYou both had the same number of case right\";\r\n                        if(runTime < oppRunTime){\r\n                            winnerString = winnerString + \", but you had a better run time, so you win :^)\";\r\n                            str2 = str2 + \", but you had a better run time, so you win :^)\";\r\n                            didWin = 1;\r\n                        }\r\n                        else if(oppRunTime < runTime){\r\n                            winnerString = winnerString + \", but they had a better run time, so you lost :^(\";\r\n                            str2 = str2 + \", but they had a better run time, so you lost :^(\";\r\n                            didWin = 0;\r\n                        }\r\n                        else{\r\n                            winnerString = winnerString + \", and you both somehow had the same runtime. Lets call it a draw\";\r\n                            str2 = str2 + \", and you both somehow had the same runtime. Lets call it a draw \";\r\n                            didWin = 2;\r\n                        \r\n                        }\r\n                    }\r\n\r\n                    outputText.textContent = str2;\r\n\r\n                    this.setState({winnerInfo: winnerString});\r\n                    this.showGameFinishedAlert();\r\n\r\n                    if(this.props.user.isCompetitive){\r\n                        if(didWin === 0){\r\n                            if(this.props.user.rank - 20 >= 100){\r\n                                this.props.updateUserRank({name: this.props.user.name, rank: this.props.user.rank, eloUpdate: -20})\r\n                            }\r\n                        }\r\n                        else if(didWin === 1){\r\n                            if(this.props.user.rank + 20 <= 799){\r\n                                this.props.updateUserRank({name: this.props.user.name, rank: this.props.user.rank, eloUpdate: 20})\r\n                            }\r\n                        }\r\n                    }\r\n\r\n\r\n                }\r\n        \r\n                \r\n        };\r\n\r\n   componentDidMount(){\r\n\r\n    \r\n\r\n        if(!this.state.leaving){\r\n            socket.emit('rejoinGame', { room: this.props.room.room });\r\n        \r\n        }\r\n    }\r\n\r\n\r\n    intervalUpdate = () => {\r\n        if(localStorage.getItem(\"numCorrect\")){\r\n            socket.emit(\"intervalUpdate\", { \r\n                numCorrect: localStorage.getItem(\"numCorrect\"),\r\n                runTime: localStorage.getItem(\"runTime\"),\r\n                memory: localStorage.getItem(\"memory\"),\r\n                room: this.props.room.room\r\n            });\r\n        }\r\n    }\r\n\r\n    showOppInfoAlert = () =>{\r\n        this.setState({showOppInfo: true});\r\n    } \r\n\r\n    showGameFinishedAlert = () =>{\r\n        this.setState({showGameFinished: true});\r\n    }\r\n    showConfirmLeave = () => {\r\n        this.setState({showConfirmLeave:true});\r\n    }\r\n\r\n    closeConfirmLeave = () => {\r\n        this.setState({showConfirmLeave:false});\r\n    }\r\n\r\n\r\n    mapMakeDescription = () => {\r\n        this.props.challenge.challenge.description.split('%').map(line => {\r\n            return <text>{line}<br/></text>\r\n        })\r\n    }\r\n    /*makeDescription = () => {\r\n        var lineBreak = document.createElement(\"br\");\r\n\r\n        lineBreak.type = \"br\";\r\n        const descriptionSplit = this.props.challenge.challenge.description.split('%');\r\n\r\n\r\n        var descText = document.createElement('text');\r\n        descText.type = \"text\";\r\n        descText.innerHTML = '';\r\n\r\n        console.log(lineBreak);\r\n\r\n        for(var i = 0; i<descriptionSplit.length; i++){\r\n            if(descriptionSplit[i].charAt(0)==='!'){\r\n                descText.innerHTML = descText.innerHTML + 'Example 1:' + lineBreak;\r\n            }\r\n            else if(descriptionSplit[i].charAt(0)==='@'){\r\n                descText.innerHTML = descText.innerHTML + 'Example 2:' + lineBreak;\r\n            }\r\n            descText.innerHTML = descText.innerHTML + descriptionSplit[i] + lineBreak;\r\n            //console.log('hi');\r\n           // console.log(descText.innerHTML);\r\n\r\n        }\r\n        document.getElementById('description').innerHTML = descText.innerHTML;\r\n\r\n        \r\n    }*/\r\n\r\n    render(){\r\n\r\n\r\n        const { challenge } = this.props.challenge;\r\n        const { room } = this.props.room;\r\n        console.log('render')\r\n        var splitImports;\r\n\r\n        if(this.state.firstInput===false){\r\n            var DS = \" \\n\";\r\n\r\n            if(challenge.dataStructure!==\"  \"){\r\n                DS = \"/*\\n\" + challenge.dataStructure + \"\\n*//*\\n\";\r\n            }\r\n\r\n            if(challenge.imports!==\" \"){\r\n                splitImports = challenge.imports.split('|');\r\n                for(var j = 0; j<splitImports.length; j++){\r\n                    DS = DS + splitImports[j] + \"\\n\";\r\n                }\r\n            }\r\n\r\n\r\n            DS = DS + \"public class Main{\\n\\tpublic static \"+ challenge.outputType + \" \" + challenge.methodName + \"(\";\r\n                for(var l = 0; l<challenge.inputTypes.length; l++){\r\n                DS = DS + challenge.inputTypes[l] + \" \" + challenge.inputVarNames[l];\r\n                if(l<challenge.inputTypes.length-1){\r\n                    DS = DS + \", \";\r\n                }        \r\n\r\n\r\n                \r\n        }\r\n        DS = DS + \"){\\n\\n\\t}\\n}\";\r\n\r\n\r\n        var selected;\r\n\r\n        \r\n\r\n        if(localStorage.getItem('srcCode')){\r\n\r\n\r\n            if(localStorage.getItem('srcCode')!==DS){\r\n               // localStorage.setItem('description', description);\r\n                selected = DS;\r\n                localStorage.setItem('srcCode', DS);\r\n                //document.getElementById('source').innerHTML = DS;\r\n                //document.getElementById('description').innerHTML = description;\r\n                this.setState({input: DS});\r\n\r\n                if(this.state.firstInput===false)\r\n                    window.location.reload(false);\r\n                \r\n\r\n            }\r\n            else{\r\n               // description = localStorage.getItem('description');\r\n                selected = localStorage.getItem('srcCode');\r\n            }\r\n\r\n        }\r\n\r\n        else{\r\n            selected = DS;\r\n            localStorage.setItem('srcCode', DS);\r\n           // localStorage.setItem('description', description);\r\n        }\r\n        }\r\n\r\n\r\n        return(\r\n            <div className = \"challengepagebg\">\r\n            \r\n            <PanelGroup direction = \"row\">\r\n                <div id = \"transparent\">\r\n                    <div style = {{marginTop: \"10px\"}}>\r\n                        <h4>\r\n                            <p id = 'title'>{challenge.name}</p>\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <br></br>\r\n\r\n                    <div style = {{marginLeft: \"5px\", marginRight: \"5px\"}}>\r\n                        <div class = \"d-flex justify-content-left\">\r\n                \r\n                            <text id= 'description'>{this.state.description}</text>\r\n                        </div>   \r\n                        <hr></hr>\r\n                        <br></br>\r\n\r\n                        <div class = \"d-flex justify-content-left\">\r\n                            <text id= \"exampleTitle\">{this.state.exampleOne=== '' ? '' : 'Example 1:' }<br></br><br></br></text>\r\n                        </div>    \r\n\r\n                        <div class = \"d-flex justify-content-left\">\r\n                            <text id = \"example\">{this.state.exampleOne}</text>\r\n                        </div>\r\n\r\n                        <div class = \"d-flex justify-content-left\">    \r\n                            <text id= \"exampleTitle\">{this.state.exampleTwo=== '' ? '' : 'Example 2:' }<br></br><br></br></text>\r\n                        </div>  \r\n\r\n                        <div class = \"d-flex justify-content-left\">\r\n                            <text id = \"example\">{this.state.exampleTwo}</text>\r\n                        </div>   \r\n                    </div> \r\n                    \r\n\r\n                </div>\r\n\r\n                <div style = {{width: \"100vw\"}}>\r\n                <Alert show = {this.state.showOppInfo}\r\n                    variant = \"info\"\r\n                    dismissable>\r\n                    <Alert.Heading>\r\n                        Little update on your opponents progress...\r\n                    </Alert.Heading>\r\n                    <p>\r\n                        They currently have passed {this.state.oppNumCorrect} cases, have a run time of {this.state.oppRunTime} ms and are using {this.state.oppMemory} KBs of memory.\r\n                    </p>\r\n                </Alert>\r\n\r\n                <Alert show = {this.state.showGameFinished}\r\n                    variant = \"info\"\r\n                    dismissable>\r\n\r\n                    <Alert.Heading>\r\n                        {this.state.winnerInfo}\r\n                    </Alert.Heading>\r\n\r\n                    <p>Your game data looked like:<br></br>{this.state.yourFinishInfo}<br></br><hr></hr>Their data looked like: <br></br>{this.state.theirFinishInfo}</p>\r\n                </Alert>\r\n\r\n                <Alert show = {this.state.showConfirmLeave}\r\n                    variant = \"info\"\r\n                    dismissable>\r\n\r\n                    <Alert.Heading>\r\n                        Are you sure you would like to leave?\r\n                    </Alert.Heading>\r\n\r\n                    <p>Be warned, abandoning incurs a cooldown!</p>\r\n                    <hr></hr>\r\n\r\n                    <Button \r\n                        onClick={this.confirmedAbandon}\r\n                    >Leave</Button>   \r\n                    <Button \r\n                        onClick={this.closeConfirmLeave}\r\n                    >Nevermind</Button>   \r\n                </Alert>\r\n\r\n\r\n                    \r\n                    <div class =\"row justify-content-center\" style ={{ height: \"8vh\" }}>\r\n                    <text\r\n                        style={{\r\n                            fontFamily: \"monospace\",\r\n                            fontSize: \"30px\"\r\n                        }}\r\n                        className=\"brand-logo black-text\"\r\n                        >\r\n                        <i className=\"material-icons\">code</i>\r\n                            CompCoder\r\n                    </text>\r\n                    </div>\r\n\r\n                    <div class =\"d-flex justify-content-between\" style ={{ height: \"8vh\" }}>\r\n                        \r\n                        <button \r\n                            type=\"submit\"\r\n                            className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                            onClick ={this.back}\r\n                            style = {{marginLeft: \"20px\"}}>\r\n                        \r\n                            <i class=\"fas fa-cog fa-fw\"></i> Back\r\n                        </button>\r\n                        <div style ={{marginRight: \"3vw\"}}>\r\n                            <Timer timesUp = {this.timesUp} intervalUpdate = {this.intervalUpdate}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                    \r\n                    <div class =\"row justify-content-center\" style ={{ height: \"65vh\" }}>\r\n                    <Col xs = {8}>\r\n                        <Editor\r\n                        required\r\n                        height=\"65vh\"\r\n                        defaultLanguage= \"java\"\r\n                        defaultValue = {DS}\r\n                        name=\"solution\"\r\n                        id=\"source\"\r\n                        onChange={this.input}\r\n                        editorProps={{blockingScroll:true}}>\r\n                            {DS}\r\n                        </Editor>\r\n                    </Col> \r\n\r\n                    <Col xs = {3}>\r\n                        <textarea \r\n                        id = \"output\">\r\n                            {this.state.output}\r\n                        </textarea>\r\n                    </Col>\r\n                    </div>\r\n\r\n                    <div class =\"row justify-content-center\" style ={{ height: \"9vh\" }}>   \r\n\r\n                    <button\r\n                        style={{\r\n                            width: \"150px\",\r\n                            borderRadius: \"3px\",\r\n                            letterSpacing: \"1.5px\",\r\n                            marginTop: \"1rem\"\r\n                        }}\r\n                        type=\"submit\"\r\n                        className=\"btn btn-large waves-effect waves-light hoverable blue accent-3\"\r\n                        onClick={this.submit}\r\n                    >\r\n                    <i class=\"fas fa-cog fa-fw\"></i> Run\r\n                    </button>\r\n                    <text id=\"warningText\"></text>\r\n                    </div>\r\n\r\n                        \r\n            \r\n            </div> \r\n        </PanelGroup>\r\n        </div>\r\n        \r\n   \r\n                    \r\n                \r\n        \r\n        );\r\n    }\r\n}\r\n   \r\n\r\nChallengePage.propTypes = {\r\n    updateUserRank: PropTypes.func.isRequired,\r\n    coolDown: PropTypes.func.isRequired,\r\n\r\n    removeChallenge: PropTypes.func.isRequired,\r\n    challengeUser: PropTypes.func.isRequired,\r\n    challenge: PropTypes.object.isRequired,\r\n    isChallenge: PropTypes.bool.isRequired,\r\n\r\n    room: PropTypes.string.isRequired,\r\n    isRoom: PropTypes.bool.isRequired,\r\n    removeRoom: PropTypes.func.isRequired,\r\n\r\n    user: PropTypes.object.isRequired\r\n\r\n\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    challenge: state.auth.challenge,\r\n    isChallenge: state.auth.isChallenge,\r\n    room: state.auth.room,\r\n    isRoom: state.auth.isRoom,\r\n\r\n    user: state.auth.user\r\n  });\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { removeChallenge, removeRoom, challengeUser, updateUserRank, coolDown}\r\n)(ChallengePage);    "]},"metadata":{},"sourceType":"module"}