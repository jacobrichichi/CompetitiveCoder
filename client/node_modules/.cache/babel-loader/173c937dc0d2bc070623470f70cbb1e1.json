{"ast":null,"code":"var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar Divider = (_temp = _class = function (_React$Component) {\n  _inherits(Divider, _React$Component);\n\n  function Divider() {\n    _classCallCheck(this, Divider);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n    _this.handleDragStart = function (e, x, y) {\n      _this.setState({\n        dragging: true,\n        initPos: {\n          x: x,\n          y: y\n        }\n      });\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.handleDragEnd = function (e) {\n      _this.setState({\n        dragging: false\n      });\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.handleDragMove = function (e, x, y) {\n      if (!_this.state.dragging) return;\n      var initDelta = {\n        x: x - _this.state.initPos.x,\n        y: y - _this.state.initPos.y\n      };\n      var flowMask = {\n        x: _this.props.direction === 'row' ? 1 : 0,\n        y: _this.props.direction === 'column' ? 1 : 0\n      };\n      var flowDelta = initDelta.x * flowMask.x + initDelta.y * flowMask.y; // Resize the panels\n\n      var resultDelta = _this.handleResize(_this.props.panelID, initDelta); // if the divider moved, reset the initPos\n\n\n      if (resultDelta + flowDelta !== 0) {\n        // Did we move the expected amount? (snapping will result in a larger delta)\n        var expectedDelta = resultDelta === flowDelta;\n\n        _this.setState({\n          initPos: {\n            // if we moved more than expected, add the difference to the Position\n            x: x + (expectedDelta ? 0 : resultDelta * flowMask.x),\n            y: y + (expectedDelta ? 0 : resultDelta * flowMask.y)\n          }\n        });\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.onMouseDown = function (e) {\n      // only left mouse button\n      if (e.button !== 0) return;\n\n      _this.handleDragStart(e, e.pageX, e.pageY);\n    };\n\n    _this.onMouseMove = function (e) {\n      _this.handleDragMove(e, e.pageX, e.pageY);\n    };\n\n    _this.onTouchStart = function (e) {\n      _this.handleDragStart(e, e.touches[0].clientX, e.touches[0].clientY);\n    };\n\n    _this.onTouchMove = function (e) {\n      _this.handleDragMove(e, e.touches[0].clientX, e.touches[0].clientY);\n    };\n\n    _this.handleResize = function (i, delta) {\n      return _this.props.handleResize(i, delta);\n    };\n\n    _this.getHandleWidth = function () {\n      return _this.props.dividerWidth + _this.props.handleBleed * 2;\n    };\n\n    _this.getHandleOffset = function () {\n      return _this.props.dividerWidth / 2 - _this.getHandleWidth() / 2;\n    };\n\n    _this.state = {\n      dragging: false,\n      initPos: {\n        x: null,\n        y: null\n      }\n    };\n    return _this;\n  } // Add/remove event listeners based on drag state\n\n\n  Divider.prototype.componentDidUpdate = function componentDidUpdate(props, state) {\n    if (this.state.dragging && !state.dragging) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('touchmove', this.onTouchMove, {\n        passive: false\n      });\n      document.addEventListener('mouseup', this.handleDragEnd);\n      document.addEventListener('touchend', this.handleDragEnd, {\n        passive: false\n      }); // maybe move it to setState callback ?\n\n      this.props.onResizeStart();\n    } else if (!this.state.dragging && state.dragging) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('touchmove', this.onTouchMove, {\n        passive: false\n      });\n      document.removeEventListener('mouseup', this.handleDragEnd);\n      document.removeEventListener('touchend', this.handleDragEnd, {\n        passive: false\n      });\n      this.props.onResizeEnd();\n    }\n  }; // Start drag state and set initial position\n  // End drag state\n  // Call resize handler if we're dragging\n  // Call resize on mouse events\n  // Event onMosueDown\n  // Event onMouseMove\n  // Call resize on Touch events (mobile)\n  // Event ontouchstart\n  // Event ontouchmove\n  // Handle resizing\n  // Utility functions for handle size provided how much bleed\n  // we want outside of the actual divider div\n  // Render component\n\n\n  Divider.prototype.render = function render() {\n    var style = {\n      divider: {\n        width: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        minWidth: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        maxWidth: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        height: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        minHeight: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        maxHeight: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        flexGrow: 0,\n        position: 'relative'\n      },\n      handle: {\n        position: 'absolute',\n        width: this.props.direction === 'row' ? this.getHandleWidth() : '100%',\n        height: this.props.direction === 'column' ? this.getHandleWidth() : '100%',\n        left: this.props.direction === 'row' ? this.getHandleOffset() : 0,\n        top: this.props.direction === 'column' ? this.getHandleOffset() : 0,\n        backgroundColor: this.props.showHandles ? 'rgba(0,128,255,0.25)' : 'auto',\n        cursor: this.props.direction === 'row' ? 'col-resize' : 'row-resize',\n        zIndex: 100\n      }\n    };\n    Object.assign(style.divider, {\n      backgroundColor: this.props.borderColor\n    }); // Add custom class if dragging\n\n    var className = 'divider';\n\n    if (this.state.dragging) {\n      className += ' dragging';\n    }\n\n    return React.createElement('div', {\n      className: className,\n      style: style.divider,\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.onTouchStart\n    }, React.createElement('div', {\n      style: style.handle\n    }));\n  };\n\n  return Divider;\n}(React.Component), _class.defaultProps = {\n  dividerWidth: 1,\n  handleBleed: 4,\n  direction: undefined,\n  showHandles: false,\n  borderColor: undefined,\n  onResizeStart: undefined,\n  onResizeEnd: undefined\n}, _temp);\nexport { Divider as default };\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  dividerWidth: PropTypes.number,\n  handleBleed: PropTypes.number,\n  direction: PropTypes.string,\n  panelID: PropTypes.number.isRequired,\n  handleResize: PropTypes.func.isRequired,\n  showHandles: PropTypes.bool,\n  borderColor: PropTypes.string,\n  onResizeStart: PropTypes.func,\n  onResizeEnd: PropTypes.func\n} : {};","map":{"version":3,"sources":["C:/Users/jacob/Comp-Coder/node_modules/react-panelgroup/es/Divider.js"],"names":["_class","_temp","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PropTypes","Divider","_React$Component","_len","arguments","length","args","Array","_key","_this","apply","concat","handleDragStart","e","x","y","setState","dragging","initPos","stopPropagation","preventDefault","handleDragEnd","handleDragMove","state","initDelta","flowMask","props","direction","flowDelta","resultDelta","handleResize","panelID","expectedDelta","onMouseDown","button","pageX","pageY","onMouseMove","onTouchStart","touches","clientX","clientY","onTouchMove","i","delta","getHandleWidth","dividerWidth","handleBleed","getHandleOffset","componentDidUpdate","document","addEventListener","passive","onResizeStart","removeEventListener","onResizeEnd","render","style","divider","width","minWidth","maxWidth","height","minHeight","maxHeight","flexGrow","position","handle","left","top","backgroundColor","showHandles","cursor","zIndex","assign","borderColor","className","createElement","Component","defaultProps","undefined","default","propTypes","process","env","NODE_ENV","number","string","isRequired","func","bool"],"mappings":"AAAA,IAAIA,MAAJ,EAAYC,KAAZ;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBC,MAAM,CAACC,MAAP,CAAcH,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEG,IAAAA,WAAW,EAAE;AAAEC,MAAAA,KAAK,EAAEN,QAAT;AAAmBO,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIR,UAAJ,EAAgBE,MAAM,CAACO,cAAP,GAAwBP,MAAM,CAACO,cAAP,CAAsBV,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACW,SAAT,GAAqBV,UAA3F;AAAwG;;AAE9e,OAAOW,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,OAAO,IAAIxB,KAAK,GAAGD,MAAM,GAAG,UAAU0B,gBAAV,EAA4B;AAC1DhB,EAAAA,SAAS,CAACe,OAAD,EAAUC,gBAAV,CAAT;;AAEA,WAASD,OAAT,GAAmB;AACjBvB,IAAAA,eAAe,CAAC,IAAD,EAAOuB,OAAP,CAAf;;AAEA,SAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,QAAIC,KAAK,GAAG3B,0BAA0B,CAAC,IAAD,EAAOoB,gBAAgB,CAAClB,IAAjB,CAAsB0B,KAAtB,CAA4BR,gBAA5B,EAA8C,CAAC,IAAD,EAAOS,MAAP,CAAcL,IAAd,CAA9C,CAAP,CAAtC;;AAEAG,IAAAA,KAAK,CAACG,eAAN,GAAwB,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACzCN,MAAAA,KAAK,CAACO,QAAN,CAAe;AACbC,QAAAA,QAAQ,EAAE,IADG;AAEbC,QAAAA,OAAO,EAAE;AACPJ,UAAAA,CAAC,EAAEA,CADI;AAEPC,UAAAA,CAAC,EAAEA;AAFI;AAFI,OAAf;;AAQAF,MAAAA,CAAC,CAACM,eAAF;AACAN,MAAAA,CAAC,CAACO,cAAF;AACD,KAXD;;AAaAX,IAAAA,KAAK,CAACY,aAAN,GAAsB,UAAUR,CAAV,EAAa;AACjCJ,MAAAA,KAAK,CAACO,QAAN,CAAe;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAf;;AACAJ,MAAAA,CAAC,CAACM,eAAF;AACAN,MAAAA,CAAC,CAACO,cAAF;AACD,KAJD;;AAMAX,IAAAA,KAAK,CAACa,cAAN,GAAuB,UAAUT,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACxC,UAAI,CAACN,KAAK,CAACc,KAAN,CAAYN,QAAjB,EAA2B;AAE3B,UAAIO,SAAS,GAAG;AACdV,QAAAA,CAAC,EAAEA,CAAC,GAAGL,KAAK,CAACc,KAAN,CAAYL,OAAZ,CAAoBJ,CADb;AAEdC,QAAAA,CAAC,EAAEA,CAAC,GAAGN,KAAK,CAACc,KAAN,CAAYL,OAAZ,CAAoBH;AAFb,OAAhB;AAKA,UAAIU,QAAQ,GAAG;AACbX,QAAAA,CAAC,EAAEL,KAAK,CAACiB,KAAN,CAAYC,SAAZ,KAA0B,KAA1B,GAAkC,CAAlC,GAAsC,CAD5B;AAEbZ,QAAAA,CAAC,EAAEN,KAAK,CAACiB,KAAN,CAAYC,SAAZ,KAA0B,QAA1B,GAAqC,CAArC,GAAyC;AAF/B,OAAf;AAKA,UAAIC,SAAS,GAAGJ,SAAS,CAACV,CAAV,GAAcW,QAAQ,CAACX,CAAvB,GAA2BU,SAAS,CAACT,CAAV,GAAcU,QAAQ,CAACV,CAAlE,CAbwC,CAexC;;AACA,UAAIc,WAAW,GAAGpB,KAAK,CAACqB,YAAN,CAAmBrB,KAAK,CAACiB,KAAN,CAAYK,OAA/B,EAAwCP,SAAxC,CAAlB,CAhBwC,CAkBxC;;;AACA,UAAIK,WAAW,GAAGD,SAAd,KAA4B,CAAhC,EAAmC;AACjC;AACA,YAAII,aAAa,GAAGH,WAAW,KAAKD,SAApC;;AAEAnB,QAAAA,KAAK,CAACO,QAAN,CAAe;AACbE,UAAAA,OAAO,EAAE;AACP;AACAJ,YAAAA,CAAC,EAAEA,CAAC,IAAIkB,aAAa,GAAG,CAAH,GAAOH,WAAW,GAAGJ,QAAQ,CAACX,CAA/C,CAFG;AAGPC,YAAAA,CAAC,EAAEA,CAAC,IAAIiB,aAAa,GAAG,CAAH,GAAOH,WAAW,GAAGJ,QAAQ,CAACV,CAA/C;AAHG;AADI,SAAf;AAOD;;AAEDF,MAAAA,CAAC,CAACM,eAAF;AACAN,MAAAA,CAAC,CAACO,cAAF;AACD,KAlCD;;AAoCAX,IAAAA,KAAK,CAACwB,WAAN,GAAoB,UAAUpB,CAAV,EAAa;AAC/B;AACA,UAAIA,CAAC,CAACqB,MAAF,KAAa,CAAjB,EAAoB;;AACpBzB,MAAAA,KAAK,CAACG,eAAN,CAAsBC,CAAtB,EAAyBA,CAAC,CAACsB,KAA3B,EAAkCtB,CAAC,CAACuB,KAApC;AACD,KAJD;;AAMA3B,IAAAA,KAAK,CAAC4B,WAAN,GAAoB,UAAUxB,CAAV,EAAa;AAC/BJ,MAAAA,KAAK,CAACa,cAAN,CAAqBT,CAArB,EAAwBA,CAAC,CAACsB,KAA1B,EAAiCtB,CAAC,CAACuB,KAAnC;AACD,KAFD;;AAIA3B,IAAAA,KAAK,CAAC6B,YAAN,GAAqB,UAAUzB,CAAV,EAAa;AAChCJ,MAAAA,KAAK,CAACG,eAAN,CAAsBC,CAAtB,EAAyBA,CAAC,CAAC0B,OAAF,CAAU,CAAV,EAAaC,OAAtC,EAA+C3B,CAAC,CAAC0B,OAAF,CAAU,CAAV,EAAaE,OAA5D;AACD,KAFD;;AAIAhC,IAAAA,KAAK,CAACiC,WAAN,GAAoB,UAAU7B,CAAV,EAAa;AAC/BJ,MAAAA,KAAK,CAACa,cAAN,CAAqBT,CAArB,EAAwBA,CAAC,CAAC0B,OAAF,CAAU,CAAV,EAAaC,OAArC,EAA8C3B,CAAC,CAAC0B,OAAF,CAAU,CAAV,EAAaE,OAA3D;AACD,KAFD;;AAIAhC,IAAAA,KAAK,CAACqB,YAAN,GAAqB,UAAUa,CAAV,EAAaC,KAAb,EAAoB;AACvC,aAAOnC,KAAK,CAACiB,KAAN,CAAYI,YAAZ,CAAyBa,CAAzB,EAA4BC,KAA5B,CAAP;AACD,KAFD;;AAIAnC,IAAAA,KAAK,CAACoC,cAAN,GAAuB,YAAY;AACjC,aAAOpC,KAAK,CAACiB,KAAN,CAAYoB,YAAZ,GAA2BrC,KAAK,CAACiB,KAAN,CAAYqB,WAAZ,GAA0B,CAA5D;AACD,KAFD;;AAIAtC,IAAAA,KAAK,CAACuC,eAAN,GAAwB,YAAY;AAClC,aAAOvC,KAAK,CAACiB,KAAN,CAAYoB,YAAZ,GAA2B,CAA3B,GAA+BrC,KAAK,CAACoC,cAAN,KAAyB,CAA/D;AACD,KAFD;;AAIApC,IAAAA,KAAK,CAACc,KAAN,GAAc;AACZN,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,CAAC,EAAE,IAAL;AAAWC,QAAAA,CAAC,EAAE;AAAd;AAFG,KAAd;AAIA,WAAON,KAAP;AACD,GAtGyD,CAwG1D;;;AAGAR,EAAAA,OAAO,CAACZ,SAAR,CAAkB4D,kBAAlB,GAAuC,SAASA,kBAAT,CAA4BvB,KAA5B,EAAmCH,KAAnC,EAA0C;AAC/E,QAAI,KAAKA,KAAL,CAAWN,QAAX,IAAuB,CAACM,KAAK,CAACN,QAAlC,EAA4C;AAC1CiC,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKd,WAA5C;AACAa,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuC,KAAKT,WAA5C,EAAyD;AACvDU,QAAAA,OAAO,EAAE;AAD8C,OAAzD;AAGAF,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAK9B,aAA1C;AACA6B,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAK9B,aAA3C,EAA0D;AACxD+B,QAAAA,OAAO,EAAE;AAD+C,OAA1D,EAN0C,CAS1C;;AACA,WAAK1B,KAAL,CAAW2B,aAAX;AACD,KAXD,MAWO,IAAI,CAAC,KAAK9B,KAAL,CAAWN,QAAZ,IAAwBM,KAAK,CAACN,QAAlC,EAA4C;AACjDiC,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKjB,WAA/C;AACAa,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,WAA7B,EAA0C,KAAKZ,WAA/C,EAA4D;AAC1DU,QAAAA,OAAO,EAAE;AADiD,OAA5D;AAGAF,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,SAA7B,EAAwC,KAAKjC,aAA7C;AACA6B,MAAAA,QAAQ,CAACI,mBAAT,CAA6B,UAA7B,EAAyC,KAAKjC,aAA9C,EAA6D;AAC3D+B,QAAAA,OAAO,EAAE;AADkD,OAA7D;AAGA,WAAK1B,KAAL,CAAW6B,WAAX;AACD;AACF,GAvBD,CA3G0D,CAoI1D;AAGA;AAGA;AAGA;AACA;AAEA;AAGA;AACA;AAGA;AAGA;AAGA;AACA;AAGA;;;AACAtD,EAAAA,OAAO,CAACZ,SAAR,CAAkBmE,MAAlB,GAA2B,SAASA,MAAT,GAAkB;AAC3C,QAAIC,KAAK,GAAG;AACVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,KAAKD,KAAL,CAAWoB,YAA5C,GAA2D,MAD3D;AAEPc,QAAAA,QAAQ,EAAE,KAAKlC,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,KAAKD,KAAL,CAAWoB,YAA5C,GAA2D,MAF9D;AAGPe,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,KAAKD,KAAL,CAAWoB,YAA5C,GAA2D,MAH9D;AAIPgB,QAAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWC,SAAX,KAAyB,QAAzB,GAAoC,KAAKD,KAAL,CAAWoB,YAA/C,GAA8D,MAJ/D;AAKPiB,QAAAA,SAAS,EAAE,KAAKrC,KAAL,CAAWC,SAAX,KAAyB,QAAzB,GAAoC,KAAKD,KAAL,CAAWoB,YAA/C,GAA8D,MALlE;AAMPkB,QAAAA,SAAS,EAAE,KAAKtC,KAAL,CAAWC,SAAX,KAAyB,QAAzB,GAAoC,KAAKD,KAAL,CAAWoB,YAA/C,GAA8D,MANlE;AAOPmB,QAAAA,QAAQ,EAAE,CAPH;AAQPC,QAAAA,QAAQ,EAAE;AARH,OADC;AAWVC,MAAAA,MAAM,EAAE;AACND,QAAAA,QAAQ,EAAE,UADJ;AAENP,QAAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,KAAKkB,cAAL,EAAjC,GAAyD,MAF1D;AAGNiB,QAAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWC,SAAX,KAAyB,QAAzB,GAAoC,KAAKkB,cAAL,EAApC,GAA4D,MAH9D;AAINuB,QAAAA,IAAI,EAAE,KAAK1C,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,KAAKqB,eAAL,EAAjC,GAA0D,CAJ1D;AAKNqB,QAAAA,GAAG,EAAE,KAAK3C,KAAL,CAAWC,SAAX,KAAyB,QAAzB,GAAoC,KAAKqB,eAAL,EAApC,GAA6D,CAL5D;AAMNsB,QAAAA,eAAe,EAAE,KAAK5C,KAAL,CAAW6C,WAAX,GAAyB,sBAAzB,GAAkD,MAN7D;AAONC,QAAAA,MAAM,EAAE,KAAK9C,KAAL,CAAWC,SAAX,KAAyB,KAAzB,GAAiC,YAAjC,GAAgD,YAPlD;AAQN8C,QAAAA,MAAM,EAAE;AARF;AAXE,KAAZ;AAsBAnF,IAAAA,MAAM,CAACoF,MAAP,CAAcjB,KAAK,CAACC,OAApB,EAA6B;AAAEY,MAAAA,eAAe,EAAE,KAAK5C,KAAL,CAAWiD;AAA9B,KAA7B,EAvB2C,CAyB3C;;AACA,QAAIC,SAAS,GAAG,SAAhB;;AACA,QAAI,KAAKrD,KAAL,CAAWN,QAAf,EAAyB;AACvB2D,MAAAA,SAAS,IAAI,WAAb;AACD;;AAED,WAAO7E,KAAK,CAAC8E,aAAN,CACL,KADK,EAEL;AACED,MAAAA,SAAS,EAAEA,SADb;AAEEnB,MAAAA,KAAK,EAAEA,KAAK,CAACC,OAFf;AAGEzB,MAAAA,WAAW,EAAE,KAAKA,WAHpB;AAIEK,MAAAA,YAAY,EAAE,KAAKA;AAJrB,KAFK,EAQLvC,KAAK,CAAC8E,aAAN,CAAoB,KAApB,EAA2B;AAAEpB,MAAAA,KAAK,EAAEA,KAAK,CAACU;AAAf,KAA3B,CARK,CAAP;AAUD,GAzCD;;AA2CA,SAAOlE,OAAP;AACD,CA9M+B,CA8M9BF,KAAK,CAAC+E,SA9MwB,CAAjB,EA8MKtG,MAAM,CAACuG,YAAP,GAAsB;AACxCjC,EAAAA,YAAY,EAAE,CAD0B;AAExCC,EAAAA,WAAW,EAAE,CAF2B;AAGxCpB,EAAAA,SAAS,EAAEqD,SAH6B;AAIxCT,EAAAA,WAAW,EAAE,KAJ2B;AAKxCI,EAAAA,WAAW,EAAEK,SAL2B;AAMxC3B,EAAAA,aAAa,EAAE2B,SANyB;AAOxCzB,EAAAA,WAAW,EAAEyB;AAP2B,CA9M3B,EAsNZvG,KAtNQ,CAAX;AAuNA,SAASwB,OAAO,IAAIgF,OAApB;AACAhF,OAAO,CAACiF,SAAR,GAAoBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AAC1DvC,EAAAA,YAAY,EAAE9C,SAAS,CAACsF,MADkC;AAE1DvC,EAAAA,WAAW,EAAE/C,SAAS,CAACsF,MAFmC;AAG1D3D,EAAAA,SAAS,EAAE3B,SAAS,CAACuF,MAHqC;AAI1DxD,EAAAA,OAAO,EAAE/B,SAAS,CAACsF,MAAV,CAAiBE,UAJgC;AAK1D1D,EAAAA,YAAY,EAAE9B,SAAS,CAACyF,IAAV,CAAeD,UAL6B;AAM1DjB,EAAAA,WAAW,EAAEvE,SAAS,CAAC0F,IANmC;AAO1Df,EAAAA,WAAW,EAAE3E,SAAS,CAACuF,MAPmC;AAQ1DlC,EAAAA,aAAa,EAAErD,SAAS,CAACyF,IARiC;AAS1DlC,EAAAA,WAAW,EAAEvD,SAAS,CAACyF;AATmC,CAAxC,GAUhB,EAVJ","sourcesContent":["var _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar Divider = (_temp = _class = function (_React$Component) {\n  _inherits(Divider, _React$Component);\n\n  function Divider() {\n    _classCallCheck(this, Divider);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args)));\n\n    _this.handleDragStart = function (e, x, y) {\n      _this.setState({\n        dragging: true,\n        initPos: {\n          x: x,\n          y: y\n        }\n      });\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.handleDragEnd = function (e) {\n      _this.setState({ dragging: false });\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.handleDragMove = function (e, x, y) {\n      if (!_this.state.dragging) return;\n\n      var initDelta = {\n        x: x - _this.state.initPos.x,\n        y: y - _this.state.initPos.y\n      };\n\n      var flowMask = {\n        x: _this.props.direction === 'row' ? 1 : 0,\n        y: _this.props.direction === 'column' ? 1 : 0\n      };\n\n      var flowDelta = initDelta.x * flowMask.x + initDelta.y * flowMask.y;\n\n      // Resize the panels\n      var resultDelta = _this.handleResize(_this.props.panelID, initDelta);\n\n      // if the divider moved, reset the initPos\n      if (resultDelta + flowDelta !== 0) {\n        // Did we move the expected amount? (snapping will result in a larger delta)\n        var expectedDelta = resultDelta === flowDelta;\n\n        _this.setState({\n          initPos: {\n            // if we moved more than expected, add the difference to the Position\n            x: x + (expectedDelta ? 0 : resultDelta * flowMask.x),\n            y: y + (expectedDelta ? 0 : resultDelta * flowMask.y)\n          }\n        });\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n    };\n\n    _this.onMouseDown = function (e) {\n      // only left mouse button\n      if (e.button !== 0) return;\n      _this.handleDragStart(e, e.pageX, e.pageY);\n    };\n\n    _this.onMouseMove = function (e) {\n      _this.handleDragMove(e, e.pageX, e.pageY);\n    };\n\n    _this.onTouchStart = function (e) {\n      _this.handleDragStart(e, e.touches[0].clientX, e.touches[0].clientY);\n    };\n\n    _this.onTouchMove = function (e) {\n      _this.handleDragMove(e, e.touches[0].clientX, e.touches[0].clientY);\n    };\n\n    _this.handleResize = function (i, delta) {\n      return _this.props.handleResize(i, delta);\n    };\n\n    _this.getHandleWidth = function () {\n      return _this.props.dividerWidth + _this.props.handleBleed * 2;\n    };\n\n    _this.getHandleOffset = function () {\n      return _this.props.dividerWidth / 2 - _this.getHandleWidth() / 2;\n    };\n\n    _this.state = {\n      dragging: false,\n      initPos: { x: null, y: null }\n    };\n    return _this;\n  }\n\n  // Add/remove event listeners based on drag state\n\n\n  Divider.prototype.componentDidUpdate = function componentDidUpdate(props, state) {\n    if (this.state.dragging && !state.dragging) {\n      document.addEventListener('mousemove', this.onMouseMove);\n      document.addEventListener('touchmove', this.onTouchMove, {\n        passive: false\n      });\n      document.addEventListener('mouseup', this.handleDragEnd);\n      document.addEventListener('touchend', this.handleDragEnd, {\n        passive: false\n      });\n      // maybe move it to setState callback ?\n      this.props.onResizeStart();\n    } else if (!this.state.dragging && state.dragging) {\n      document.removeEventListener('mousemove', this.onMouseMove);\n      document.removeEventListener('touchmove', this.onTouchMove, {\n        passive: false\n      });\n      document.removeEventListener('mouseup', this.handleDragEnd);\n      document.removeEventListener('touchend', this.handleDragEnd, {\n        passive: false\n      });\n      this.props.onResizeEnd();\n    }\n  };\n\n  // Start drag state and set initial position\n\n\n  // End drag state\n\n\n  // Call resize handler if we're dragging\n\n\n  // Call resize on mouse events\n  // Event onMosueDown\n\n  // Event onMouseMove\n\n\n  // Call resize on Touch events (mobile)\n  // Event ontouchstart\n\n\n  // Event ontouchmove\n\n\n  // Handle resizing\n\n\n  // Utility functions for handle size provided how much bleed\n  // we want outside of the actual divider div\n\n\n  // Render component\n  Divider.prototype.render = function render() {\n    var style = {\n      divider: {\n        width: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        minWidth: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        maxWidth: this.props.direction === 'row' ? this.props.dividerWidth : 'auto',\n        height: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        minHeight: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        maxHeight: this.props.direction === 'column' ? this.props.dividerWidth : 'auto',\n        flexGrow: 0,\n        position: 'relative'\n      },\n      handle: {\n        position: 'absolute',\n        width: this.props.direction === 'row' ? this.getHandleWidth() : '100%',\n        height: this.props.direction === 'column' ? this.getHandleWidth() : '100%',\n        left: this.props.direction === 'row' ? this.getHandleOffset() : 0,\n        top: this.props.direction === 'column' ? this.getHandleOffset() : 0,\n        backgroundColor: this.props.showHandles ? 'rgba(0,128,255,0.25)' : 'auto',\n        cursor: this.props.direction === 'row' ? 'col-resize' : 'row-resize',\n        zIndex: 100\n      }\n    };\n    Object.assign(style.divider, { backgroundColor: this.props.borderColor });\n\n    // Add custom class if dragging\n    var className = 'divider';\n    if (this.state.dragging) {\n      className += ' dragging';\n    }\n\n    return React.createElement(\n      'div',\n      {\n        className: className,\n        style: style.divider,\n        onMouseDown: this.onMouseDown,\n        onTouchStart: this.onTouchStart\n      },\n      React.createElement('div', { style: style.handle })\n    );\n  };\n\n  return Divider;\n}(React.Component), _class.defaultProps = {\n  dividerWidth: 1,\n  handleBleed: 4,\n  direction: undefined,\n  showHandles: false,\n  borderColor: undefined,\n  onResizeStart: undefined,\n  onResizeEnd: undefined\n}, _temp);\nexport { Divider as default };\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  dividerWidth: PropTypes.number,\n  handleBleed: PropTypes.number,\n  direction: PropTypes.string,\n  panelID: PropTypes.number.isRequired,\n  handleResize: PropTypes.func.isRequired,\n  showHandles: PropTypes.bool,\n  borderColor: PropTypes.string,\n  onResizeStart: PropTypes.func,\n  onResizeEnd: PropTypes.func\n} : {};"]},"metadata":{},"sourceType":"module"}